{"version":3,"sources":["file:///D:/PA_2024/3D/BilliardPuzzle/BilliardPuzzle_Op10/assets/Ops/Op9/Scripts/Utility3D/SoundManager.ts"],"names":["_decorator","AudioClip","AudioSource","Singleton","Constants","ccclass","property","SoundManager","constructor","_instance","onLoad","PlaySound","stringAudioName","ironSource","SoundState","hitBall","playOneShot","hitBallClip","hitPocket","hitPocketClip","winSound","play","update","deltaTime","theme","volume"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;;AACzBC,MAAAA,S;;AACEC,MAAAA,S,iBAAAA,S;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;8BAIjBO,Y,WADZF,OAAO,CAAC,cAAD,C,UAGHC,QAAQ,CAACJ,WAAD,C,UAGRI,QAAQ,CAACJ,WAAD,C,UAGRI,QAAQ,CAACL,SAAD,C,UAGRK,QAAQ,CAACJ,WAAD,C,UAGRI,QAAQ,CAACJ,WAAD,C,UAGRI,QAAQ,CAACL,SAAD,C,UAGRK,QAAQ,CAACJ,WAAD,C,oCArBb,MACaK,YADb;AAAA;AAAA,kCAC0D;AAwBtDC,QAAAA,WAAW,GAAG;AACV;;AADU;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEVD,UAAAA,YAAY,CAACE,SAAb,GAAyB,IAAzB;AACH;;AAGSC,QAAAA,MAAM,GAAS,CAExB;;AAGDC,QAAAA,SAAS,CAACC,eAAD,EAA0B;AAE/B,cAAI,CAAC;AAAA;AAAA,sCAAUC,UAAV,CAAqBC,UAA1B,EAAsC;;AAEtC,kBAAQF,eAAR;AACI,iBAAK,SAAL;AACI,mBAAKG,OAAL,CAAaC,WAAb,CAAyB,KAAKC,WAA9B;AACA;;AACJ,iBAAK,WAAL;AACI,mBAAKC,SAAL,CAAeF,WAAf,CAA2B,KAAKG,aAAhC;AACA;;AACA,iBAAK,UAAL;AACI,mBAAKC,QAAL,CAAcC,IAAd;AACA;AATZ;AAWH;;AAGDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,cAAI;AAAA;AAAA,sCAAUV,UAAV,CAAqBC,UAAzB,EAAqC;AACjC,iBAAKU,KAAL,CAAWC,MAAX,GAAoB,GAApB;AACH,WAFD,MAEO;AACH,iBAAKD,KAAL,CAAWC,MAAX,GAAoB,CAApB;AACH;AACJ;;AA3DqD,O;;;;;iBAGjC,I;;;;;;;iBAGE,I;;;;;;;iBAGE,I;;;;;;;iBAGE,I;;;;;;;iBAGF,I;;;;;;;iBAGE,I;;;;;;;iBAGH,I","sourcesContent":["\nimport { _decorator, AudioClip, AudioSource, Component, log, Node } from 'cc';\nimport Singleton from './Singleton';\nimport { Constants } from './Constant';\nimport Global from './Global';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('SoundManager')\nexport class SoundManager extends Singleton<SoundManager> {\n\n    @property(AudioSource)\n    theme: AudioSource = null;\n\n    @property(AudioSource)\n    hitBall: AudioSource = null;\n\n    @property(AudioClip)\n    hitBallClip: AudioClip = null;\n\n    @property(AudioSource)\n    adjustAngle: AudioSource = null;\n\n    @property(AudioSource)\n    hitPocket: AudioSource = null;\n\n    @property(AudioClip)\n    hitPocketClip: AudioClip = null;\n\n    @property(AudioSource)\n    winSound: AudioSource = null;\n\n\n    constructor() {\n        super();\n        SoundManager._instance = this;\n    }\n\n\n    protected onLoad(): void {\n\n    }\n\n\n    PlaySound(stringAudioName: string) {\n\n        if (!Constants.ironSource.SoundState) return;\n\n        switch (stringAudioName) {\n            case \"HitBall\":\n                this.hitBall.playOneShot(this.hitBallClip);\n                break;\n            case \"HitPocket\":\n                this.hitPocket.playOneShot(this.hitPocketClip);\n                break;\n                case \"winSound\":\n                    this.winSound.play();\n                    break;\n        }\n    }\n\n\n    update(deltaTime: number) {\n        if (Constants.ironSource.SoundState) {\n            this.theme.volume = 0.5;\n        } else {\n            this.theme.volume = 0;\n        }\n    }\n}"]}