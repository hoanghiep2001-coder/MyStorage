{"version":3,"sources":["file:///D:/PA_2024/3D/BilliardPuzzle/Billiard/assets/Ops/Op3/Scripts/Utility3D/GameManager.ts"],"names":["_decorator","Animation","Color","Node","Sprite","tween","Singleton","Constants","Global","ccclass","property","GameManager","constructor","_instance","onLoad","handleMuteSoundIronSource","ironSource","State","parseInt","localStorage","getItem","SoundState","isEndGame","ShowEndcard","endGame","CTA","to","color","call","btnAll","active","start","ActiveTextPraise","textPraise","getComponent","play","lateUpdate","dt","update"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAA2CC,MAAAA,I,OAAAA,I;AAAiBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;;AAC7FC,MAAAA,S;;AACEC,MAAAA,S,iBAAAA,S;;AAGFC,MAAAA,M;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;6BAIaW,W,WADZF,OAAO,CAAC,aAAD,C,UAQHC,QAAQ,CAACP,IAAD,C,UAGRO,QAAQ,CAACP,IAAD,C,UAGRO,QAAQ,CAACN,MAAD,C,UAGRM,QAAQ,CAACP,IAAD,C,oCAjBb,MACaQ,WADb;AAAA;AAAA,kCACwD;AAEpDC,QAAAA,WAAW,GAAG;AACV;;AADU;;AAAA;;AAAA;;AAAA;;AAEVD,UAAAA,WAAW,CAACE,SAAZ,GAAwB,IAAxB;AACH;;AAcSC,QAAAA,MAAM,GAAS,CACxB;;AAGMC,QAAAA,yBAAyB,GAAS;AACrC;AAAA;AAAA,sCAAUC,UAAV,CAAqBC,KAArB,GAA6BC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAD,EAA0C,EAA1C,CAArC;;AAEA,cAAI;AAAA;AAAA,sCAAUJ,UAAV,CAAqBC,KAAzB,EAAgC;AAC5B,gBAAI;AAAA;AAAA,wCAAUD,UAAV,CAAqBC,KAArB,KAA+B,CAA/B,IAAoC,CAAC;AAAA;AAAA,wCAAUD,UAAV,CAAqBK,UAA1D,IAAwE,CAAC;AAAA;AAAA,wCAAUL,UAAV,CAAqBM,SAAlG,EAA6G;AACzG;AAAA;AAAA,0CAAUN,UAAV,CAAqBK,UAArB,GAAkC,IAAlC;AACH;;AAED,gBAAI;AAAA;AAAA,wCAAUL,UAAV,CAAqBC,KAArB,KAA+B,CAA/B,IAAoC;AAAA;AAAA,wCAAUD,UAAV,CAAqBK,UAA7D,EAAyE;AACrE;AAAA;AAAA,0CAAUL,UAAV,CAAqBK,UAArB,GAAkC,KAAlC;AACH;AACJ;AACJ;;AAEDE,QAAAA,WAAW,GAAG;AACV;AAAA;AAAA,gCAAOC,OAAP,GAAiB,IAAjB;AACAnB,UAAAA,KAAK,CAAC,KAAKoB,GAAN,CAAL,CACKC,EADL,CACQ,CADR,EACW;AAAEC,YAAAA,KAAK,EAAE,IAAIzB,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB;AAAT,WADX,EAEK0B,IAFL,CAEU,MAAM;AACR,iBAAKC,MAAL,CAAYC,MAAZ,GAAqB,IAArB;AACH,WAJL,EAKKC,KALL;AAMH;;AACDC,QAAAA,gBAAgB,GAAG;AACf,cAAI;AAAA;AAAA,gCAAOR,OAAX,EAAoB;AACpB,cAAI,KAAKS,UAAL,CAAgBH,MAAhB,IAA0B,IAA9B,EAAoC;AACpC,eAAKG,UAAL,CAAgBH,MAAhB,GAAyB,IAAzB;AACA,eAAKG,UAAL,CAAgBC,YAAhB,CAA6BjC,SAA7B,EAAwCkC,IAAxC,CAA6C,YAA7C;AACH;;AAESJ,QAAAA,KAAK,GAAS,CACpB;AACH;;AAESK,QAAAA,UAAU,CAACC,EAAD,EAAmB,CACtC;;AACSC,QAAAA,MAAM,CAACD,EAAD,EAAmB,CAChC;AACF;;AA7DmD,O;;;;;iBAQtC,I;;;;;;;iBAGK,I;;;;;;;iBAGL,I;;;;;;;iBAGC,I;;;AA+CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Animation, Color, Component, Director, log, Material, Node, RigidBody, Sprite, tween, Vec3 } from 'cc';\nimport Singleton from './Singleton';\nimport { Constants } from './Constant';\nimport EventManager from './Observer/EventManager';\nimport { Ball } from '../GamePlay/Ball';\nimport Global from './Global';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = GameManager\n * DateTime = Wed May 15 2024 10:13:43 GMT+0700 (Indochina Time)\n * Author = PhongDNRocket123\n * FileBasename = GameManager.ts\n * FileBasenameNoExtension = GameManager\n * URL = db://assets/Scripts/GameManager.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\n *\n */\n\n\n@ccclass('GameManager')\nexport class GameManager extends Singleton<GameManager> {\n\n    constructor() {\n        super();\n        GameManager._instance = this;\n    }\n\n    @property(Node)\n    guide: Node = null;\n\n    @property(Node)\n    textPraise: Node = null;\n\n    @property(Sprite)\n    CTA: Sprite = null;\n\n    @property(Node)\n    btnAll: Node = null;\n\n    protected onLoad(): void {\n    }\n\n\n    public handleMuteSoundIronSource(): void {\n        Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\n\n        if (Constants.ironSource.State) {\n            if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\n                Constants.ironSource.SoundState = true;\n            }\n\n            if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\n                Constants.ironSource.SoundState = false;\n            }\n        }\n    }\n\n    ShowEndcard() {\n        Global.endGame = true;\n        tween(this.CTA)\n            .to(1, { color: new Color(255, 255, 255, 255) })\n            .call(() => {\n                this.btnAll.active = true;\n            })\n            .start();\n    }\n    ActiveTextPraise() {\n        if (Global.endGame) return;\n        if (this.textPraise.active == true) return;\n        this.textPraise.active = true;\n        this.textPraise.getComponent(Animation).play(\"TextPraise\");\n    }\n\n    protected start(): void {\n        //  this.ShowEndcard();\n    }\n\n    protected lateUpdate(dt: number): void {\n    }\n    protected update(dt: number): void {\n       // this.handleMuteSoundIronSource();\n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}