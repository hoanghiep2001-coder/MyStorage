{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,uCAAD,EAA+I,uCAA/I,EAAwR,uCAAxR,EAAsa,uCAAta,EAAqjB,uCAArjB,EAAqsB,uCAArsB,EAA60B,uCAA70B,EAA69B,uCAA79B,EAAsmC,uCAAtmC,EAAmvC,uCAAnvC,EAAs4C,wCAAt4C,EAA4hD,wCAA5hD,EAA6qD,wCAA7qD,EAA4zD,wCAA5zD,EAA48D,wCAA58D,EAA0lE,wCAA1lE,EAA4uE,wCAA5uE,EAA63E,wCAA73E,EAAygF,wCAAzgF,EAAoqF,wCAApqF,EAAozF,wCAApzF,EAAm8F,wCAAn8F,EAAqlG,wCAArlG,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/ActiveCCD.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/Ball.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/BallPoted.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/BallRandom.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/ControllCue.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/Cue.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/DefaultBall.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/Hole.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/Joystick.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/LogLayerPhysic.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/RaycastShootPoint.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/ShootingTurn.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/GamePlay/TextPraise.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/AdsManager.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/Constant.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/EnableEngine.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/GameManager.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/Global.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/Observer/EventManager.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/Responsive.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/Singleton.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/SoundManager.ts\"), () => import(\"file:///D:/PA/IceBear_PA_2024/3D/BilliardPuzzle/BilliardPuzzle_OP10/BilliardPuzzle_OP10/assets/Scripts/Utility3D/Utility.ts\")];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}