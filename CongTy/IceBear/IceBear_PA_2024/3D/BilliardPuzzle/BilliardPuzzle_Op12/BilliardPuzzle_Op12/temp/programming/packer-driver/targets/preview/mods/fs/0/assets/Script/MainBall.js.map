{"version":3,"sources":["file:///D:/PA_2024/3D/BilliardPuzzle/BilliardPuzzle_Op12/assets/Script/MainBall.ts"],"names":["_decorator","Component","Node","Collider","Animation","Vec3","Camera","Label","Prefab","instantiate","Main","AudioManager","Constants","ccclass","property","Ball","FixedPositionX","pos","node","position","setPosition","x","z","start","myCollider","getComponent","on","target","isPhysic","otherCollider","name","indexOf","isLose","playSound","SoundTrack","LoseSound","active","hitSound","scheduleOnce","activeComboCollideTable","collideWallSound","physicNode","comboCollide","out","wpos","worldPosition","convertToUINode","Canvas","combo_collideTable","label","getChildByName","string","String","parent","play","update","thisPos","getPosition","cube"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Collider, ICollisionEvent, Animation, AudioClip, AudioSource, director, Vec3, Camera, log, Label, Prefab, instantiate } from 'cc';\nconst { ccclass, property } = _decorator;\nimport { Main } from \"./Main\";\nimport { AudioManager } from './Plugin/AudioManager';\nimport { Constants } from './Data/Constant';\n\n@ccclass('Ball')\nexport class Ball extends Component {\n    @property(Main)\n    Main: Main;\n    @property(AudioManager)\n    AudioManager: AudioManager;\n    @property(Camera)\n    Camera: Camera = null;\n\n    @property(Node)\n    Canvas: Node = null;\n    @property(Prefab)\n    combo_collideTable: Prefab = null;\n    @property(Node)\n    cube: Node = null;\n\n    audioId: any = null;\n    comboCollide: number = 0;\n\n    FixedPositionX() {\n        const pos = this.node.position;\n        this.node.setPosition(pos.x, 0, pos.z);\n    }\n\n\n    start() {\n        let myCollider = this.node.getComponent(Collider);\n        myCollider.on(\"onCollisionEnter\", (target: ICollisionEvent) => {\n            const isPhysic = target.otherCollider.node;\n            if (isPhysic.name.indexOf('hole') != -1) {\n                Constants.isLose = true;\n                this.AudioManager.playSound(Constants.SoundTrack.LoseSound)\n                this.node.active = false;\n            }\n\n            if (isPhysic.name.indexOf('Cube') != -1) {\n                this.AudioManager.playSound(Constants.SoundTrack.hitSound)\n\n                this.scheduleOnce(() => {\n                    Constants.isLose = true;\n                }, 2)\n            }\n\n            if (isPhysic.name.indexOf('collider_table') != -1) {\n                !Constants.isLose && this.activeComboCollideTable(isPhysic)\n                this.AudioManager.playSound(Constants.SoundTrack.collideWallSound)\n            }\n        })\n    }\n\n\n    private activeComboCollideTable(physicNode: Node): void {\n        this.comboCollide += 1;\n        const out = new Vec3();\n        const wpos = physicNode.worldPosition;\n        this.Camera.convertToUINode(wpos, this.Canvas, out);\n        let node = instantiate(this.combo_collideTable);\n        let label = node.getChildByName(\"Label\").getComponent(Label);\n        label.string = String(this.comboCollide);\n        node.parent = this.Canvas;\n        node.position = out;\n        node.getComponent(Animation).play(\"CollideCombo\");\n    }\n\n\n    update() {\n        // this.label.string = String(this.comboCollide);\n        let thisPos = this.node.getPosition();\n        this.cube.setPosition(thisPos.x, 0.55, thisPos.z + 0.02)\n        // this.FixedPositionX();\n    }\n\n}\n"]}