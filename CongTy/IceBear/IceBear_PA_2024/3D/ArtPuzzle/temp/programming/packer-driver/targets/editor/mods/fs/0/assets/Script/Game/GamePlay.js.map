{"version":3,"sources":["file:///D:/PA_2024/3D/ArtPuzzle/ArtPuzzle_Op1/assets/Script/Game/GamePlay.ts"],"names":["_decorator","log","Component","tween","Vec3","Sprite","EffectAsset","Texture2D","easing","GameController","AudioManager","Constants","UIController","GameCommon","ccclass","property","GamePlay","start","isDissolveIn","targetNode","Warpper","addHintMaterials","addDecorItemsMaterial","getChildByName","children","forEach","hint","index","getComponent","customMaterial","HintMaterials","item","Materials","dissolveSprite","node","sprite","material","setProperty","currentDissolveInPercent","updateProgress","progressScale","Progress","scale","to","dissolvedItemNumber","y","z","elasticOut","filterSameArea","itemName","sameArea","ImpactArea","handleMuteSoundIronSource","ironSource","State","parseInt","localStorage","getItem","SoundState","isEndGame","stopAllSound","handleIronSourcePlaySound","isPlayBgSound","playSound","SoundTrack","bgSound","dissolveIn","isCanClick","isDissolveFirstTime","Hints","checkDoneHint","Tutorial","active","currentStep","NextStepSound","update","dt"],"mappings":"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","sourcesContent":["import { _decorator, log, Animation, Component, gfx, Node, Camera, tween, Vec2, Vec3, director, SkeletalAnimation, Rect, UITransform, math, Sprite, Material, macro, InstanceMaterialType, misc, effects, EffectAsset, Texture2D, resources, RenderableComponent, easing } from 'cc';\nconst { ccclass, property } = _decorator;\nimport { GameController } from './GameController';\nimport { AudioManager } from './AudioManager';\nimport { Constants } from '../Data/constants';\nimport { UIController } from './UIController';\nimport { GameCommon } from '../Data/GameCommon';\n\n\n@ccclass('GamePlay')\nexport class GamePlay extends Component {\n    // Component\n    @property(UIController)\n    UIController: UIController = null;\n    @property(GameController)\n    GameController: GameController = null;\n    @property(AudioManager)\n    AudioManager: AudioManager = null;\n\n    @property(EffectAsset)\n    DissolveEffect: EffectAsset = null;\n    @property(Texture2D)\n    DissolveTexture: Texture2D = null;\n\n    // state\n\n    protected start(): void {\n        // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\n\n        Constants.isDissolveIn = true;\n        Constants.targetNode = this.UIController.Warpper;\n        this.addHintMaterials();\n        this.addDecorItemsMaterial();\n    }\n\n\n    private addHintMaterials(): void {\n        this.UIController.Warpper.getChildByName(\"Hint\").children\n            .forEach((hint, index) => {\n                hint.getComponent(Sprite).customMaterial = this.UIController.HintMaterials[index];\n            });\n    };\n\n\n    private addDecorItemsMaterial(): void {\n        this.UIController.Warpper.getChildByName(\"Decor\").children\n            .forEach((item, index) => {\n                item.getComponent(Sprite).customMaterial = this.UIController.Materials[index];\n            });\n    };\n\n\n    private dissolveSprite(node: Node): void {\n        let sprite = node.getComponent(Sprite);\n        let material = sprite.customMaterial;\n        material.setProperty('dissolveThreshold', Constants.currentDissolveInPercent);\n    }\n\n\n    public updateProgress(): void {\n        let progressScale = this.UIController.Progress.scale;\n\n        tween(this.UIController.Progress)\n            .to(0.5, {\n                scale: new Vec3((Constants.dissolvedItemNumber - 2) / 18,\n                    progressScale.y, progressScale.z)\n            }, { easing: easing.elasticOut })\n            .start();\n\n        log(\"---- update progress!!\");\n    };\n\n\n    public filterSameArea(itemName: string): void {\n        Constants.sameArea = this.UIController.ImpactArea.getChildByName(itemName);\n\n        Constants.targetNode = this.UIController.Warpper\n            .getChildByName(\"Decor\")\n            .getChildByName(itemName);\n    }\n\n\n    private handleMuteSoundIronSource(): void {\n        Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\n\n        if (Constants.ironSource.State) {\n            if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\n                Constants.ironSource.SoundState = true;\n            }\n\n            if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\n                Constants.ironSource.SoundState = false;\n                this.AudioManager.stopAllSound();\n            }\n        }\n    }\n\n\n    public handleIronSourcePlaySound(): void {\n        if (Constants.ironSource.isPlayBgSound) {\n            return;\n        }\n\n        if (Constants.ironSource.SoundState) {\n            this.AudioManager.playSound(Constants.SoundTrack.bgSound);\n        }\n\n        Constants.ironSource.isPlayBgSound = true;\n    }\n\n\n    private dissolveIn(): void {\n        if (Constants.currentDissolveInPercent <= 0) {\n\n            Constants.targetNode.getComponent(Sprite).customMaterial = null;\n            Constants.targetNode = null;\n            Constants.isDissolveIn = false;\n            Constants.currentDissolveInPercent = 1;\n            Constants.dissolvedItemNumber += 1;\n\n            // fix opening game, force user wait to the hint show full, then can play game\n            if (Constants.dissolvedItemNumber >= 2) Constants.isCanClick = true;\n\n            // show first hint after dissolve background done\n            if (!Constants.isDissolveFirstTime) {\n                Constants.isDissolveFirstTime = true;\n                Constants.isDissolveIn = true;\n                Constants.targetNode = this.UIController.Hints[0];\n                return;\n            }\n\n            // check done hint every done 1 dissolve spirte\n            this.checkDoneHint();\n\n            this.UIController.Tutorial.active = true;\n\n            // this.AudioManager.playSound(Constants.SoundTrack.matchSound);\n\n            return;\n        }\n\n        Constants.isCanClick = false;\n        this.dissolveSprite(Constants.targetNode)\n        Constants.currentDissolveInPercent -= 0.01;\n    }\n\n\n    private checkDoneHint(): void {\n\n        // --  done hint 1  --------\n        if (Constants.dissolvedItemNumber === 7) {\n            GameCommon.currentStep = 2;\n\n            this.UIController.Hints[0].active = false;\n\n            Constants.isDissolveIn = true;\n\n            Constants.targetNode = this.UIController.Hints[1];\n\n            this.AudioManager.playSound(Constants.SoundTrack.NextStepSound);\n        }\n\n\n        if (Constants.dissolvedItemNumber === 12) {\n            GameCommon.currentStep = 3;\n\n            this.UIController.Hints[1].active = false;\n\n            Constants.isDissolveIn = true;\n\n            Constants.targetNode = this.UIController.Hints[2];\n\n            this.AudioManager.playSound(Constants.SoundTrack.NextStepSound);\n        }\n\n\n        if (Constants.dissolvedItemNumber === 18) {\n            GameCommon.currentStep = 4;\n\n            this.UIController.Hints[2].active = false;\n\n            Constants.isDissolveIn = true;\n\n            Constants.targetNode = this.UIController.Hints[3];\n\n            this.AudioManager.playSound(Constants.SoundTrack.NextStepSound);\n        }\n\n        this.updateProgress();\n    }\n\n\n    protected update(dt: number): void {\n        Constants.isDissolveIn && this.dissolveIn();\n\n        // ironsource\n        this.handleMuteSoundIronSource();\n    }\n}\n"]}