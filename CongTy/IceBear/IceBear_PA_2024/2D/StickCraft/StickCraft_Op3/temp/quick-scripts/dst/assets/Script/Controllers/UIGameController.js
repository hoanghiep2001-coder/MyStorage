
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Controllers/UIGameController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '943a1fcjPZA0Lh/rcxbUNcu', 'UIGameController');
// Script/Controllers/UIGameController.js

"use strict";

var CONST = require("CONST");

var GameInfo = require("GameInfo");

cc.Class({
  "extends": cc.Component,
  properties: {
    FollowCamera: cc.Node,
    // Btn Move
    ButtonMoveLeft: {
      "default": null,
      type: cc.Button,
      serializable: true
    },
    ButtonMoveRight: {
      "default": null,
      type: cc.Button,
      serializable: true
    },
    // Btn Attack
    ButtonAttack: {
      "default": null,
      type: cc.Button,
      serializable: true
    },
    ButtonJump: {
      "default": null,
      type: cc.Button,
      serializable: true
    },
    ButtonDash: {
      "default": null,
      type: cc.Button,
      serializable: true
    },
    // Button Weapon
    ButtonWeaponSword: {
      "default": null,
      type: cc.Button,
      serializable: true
    },
    ButtonWeaponArcher: {
      "default": null,
      type: cc.Button,
      serializable: true
    },
    // Info
    EnemyLiveText: {
      "default": null,
      type: cc.Label,
      serializable: true
    },
    StickLifeText: {
      "default": null,
      type: cc.Label,
      serializable: true
    },
    HandTutorialSword: cc.Node,
    HandTutorialArcher: cc.Node,
    MessageText: cc.Label,
    TempWall: cc.Node,
    InstallPopup: cc.Node
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    GameInfo.TotalEnemy = CONST.TotalEnemyInGame;
    GameInfo.TotalEnemyAlive = GameInfo.TotalEnemy;
    this._tutorialDoneStage1Called = false;
    this._tutorialStartStage2Called = false;
    this._tutorialDoneStage2Called = false;
    this._isShowedPopupInstall = false;
    GameInfo.GamePause = true;
    this.scheduleOnce(function () {
      if (cc.view.getFrameSize().width > cc.view.getFrameSize().height) {
        GameInfo.GamePause = false;
      } else {
        GameInfo.GamePause = true;
      }
    }, 3);
  },
  start: function start() {
    this.InstallPopup.active = false;
  },
  update: function update(dt) {
    this.node.setPosition(this.FollowCamera.getPosition());
    this.EnemyLiveText.string = GameInfo.TotalEnemy - GameInfo.TotalEnemyAlive + "/" + GameInfo.TotalEnemy;

    if (!GameInfo.TutorialStartStage2) {
      if (GameInfo.TotalEnemy - GameInfo.TotalEnemyAlive >= CONST.NumEnemyForStartStage2) {
        GameInfo.TutorialStartStage2 = true;
      }
    }

    if (!this._tutorialDoneStage1Called && GameInfo.TutorialDoneStage1) {
      this._tutorialDoneStage1Called = true;
      this.callWhenStage1Done();
    }

    if (!this._tutorialStartStage2Called && GameInfo.TutorialStartStage2) {
      this._tutorialStartStage2Called = true;
      this.callWhenStage2Start();
    } // cc.log(GameInfo.TutorialDoneStage2);


    if (!this._tutorialDoneStage2Called && GameInfo.TutorialDoneStage2) {
      this._tutorialDoneStage2Called = true;
      this.callWhenStage2Done();
    }

    if (!this._isShowedPopupInstall && GameInfo.IsShowPopupInstall) {
      this._isShowedPopupInstall = true;
      this.showPopupInstall();
    }
  },
  callWhenStage1Done: function callWhenStage1Done() {
    cc.log("Stage 1 Done");
    this.MessageText.node.active = false;
  },
  callWhenStage2Start: function callWhenStage2Start() {
    cc.log("Stage 2 Start");
    this.TempWall.active = false;
    this.MessageText.node.active = true;
    this.MessageText.string = "CHANGE YOUR WEAPON!"; // GameInfo.GamePause = true;
    // this.scheduleOnce(function() {
    //     GameInfo.GamePause = false;
    // }, 3);
  },
  callWhenStage2Done: function callWhenStage2Done() {
    cc.log("Stage 2 Done");
    this.MessageText.node.active = false;
  },
  showPopupInstall: function showPopupInstall() {
    this.InstallPopup.active = true;
    this.InstallPopup.setPosition(0, 0);
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxDb250cm9sbGVyc1xcVUlHYW1lQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJDT05TVCIsInJlcXVpcmUiLCJHYW1lSW5mbyIsImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwiRm9sbG93Q2FtZXJhIiwiTm9kZSIsIkJ1dHRvbk1vdmVMZWZ0IiwidHlwZSIsIkJ1dHRvbiIsInNlcmlhbGl6YWJsZSIsIkJ1dHRvbk1vdmVSaWdodCIsIkJ1dHRvbkF0dGFjayIsIkJ1dHRvbkp1bXAiLCJCdXR0b25EYXNoIiwiQnV0dG9uV2VhcG9uU3dvcmQiLCJCdXR0b25XZWFwb25BcmNoZXIiLCJFbmVteUxpdmVUZXh0IiwiTGFiZWwiLCJTdGlja0xpZmVUZXh0IiwiSGFuZFR1dG9yaWFsU3dvcmQiLCJIYW5kVHV0b3JpYWxBcmNoZXIiLCJNZXNzYWdlVGV4dCIsIlRlbXBXYWxsIiwiSW5zdGFsbFBvcHVwIiwib25Mb2FkIiwiVG90YWxFbmVteSIsIlRvdGFsRW5lbXlJbkdhbWUiLCJUb3RhbEVuZW15QWxpdmUiLCJfdHV0b3JpYWxEb25lU3RhZ2UxQ2FsbGVkIiwiX3R1dG9yaWFsU3RhcnRTdGFnZTJDYWxsZWQiLCJfdHV0b3JpYWxEb25lU3RhZ2UyQ2FsbGVkIiwiX2lzU2hvd2VkUG9wdXBJbnN0YWxsIiwiR2FtZVBhdXNlIiwic2NoZWR1bGVPbmNlIiwidmlldyIsImdldEZyYW1lU2l6ZSIsIndpZHRoIiwiaGVpZ2h0Iiwic3RhcnQiLCJhY3RpdmUiLCJ1cGRhdGUiLCJkdCIsIm5vZGUiLCJzZXRQb3NpdGlvbiIsImdldFBvc2l0aW9uIiwic3RyaW5nIiwiVHV0b3JpYWxTdGFydFN0YWdlMiIsIk51bUVuZW15Rm9yU3RhcnRTdGFnZTIiLCJUdXRvcmlhbERvbmVTdGFnZTEiLCJjYWxsV2hlblN0YWdlMURvbmUiLCJjYWxsV2hlblN0YWdlMlN0YXJ0IiwiVHV0b3JpYWxEb25lU3RhZ2UyIiwiY2FsbFdoZW5TdGFnZTJEb25lIiwiSXNTaG93UG9wdXBJbnN0YWxsIiwic2hvd1BvcHVwSW5zdGFsbCIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLFFBQVEsR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBRUFFLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxZQUFZLEVBQUVKLEVBQUUsQ0FBQ0ssSUFEVDtBQUdSO0FBQ0FDLElBQUFBLGNBQWMsRUFBRTtBQUNaLGlCQUFTLElBREc7QUFFWkMsTUFBQUEsSUFBSSxFQUFFUCxFQUFFLENBQUNRLE1BRkc7QUFHWkMsTUFBQUEsWUFBWSxFQUFFO0FBSEYsS0FKUjtBQVNSQyxJQUFBQSxlQUFlLEVBQUU7QUFDYixpQkFBUyxJQURJO0FBRWJILE1BQUFBLElBQUksRUFBRVAsRUFBRSxDQUFDUSxNQUZJO0FBR2JDLE1BQUFBLFlBQVksRUFBRTtBQUhELEtBVFQ7QUFjUjtBQUNBRSxJQUFBQSxZQUFZLEVBQUU7QUFDVixpQkFBUyxJQURDO0FBRVZKLE1BQUFBLElBQUksRUFBRVAsRUFBRSxDQUFDUSxNQUZDO0FBR1ZDLE1BQUFBLFlBQVksRUFBRTtBQUhKLEtBZk47QUFvQlJHLElBQUFBLFVBQVUsRUFBRTtBQUNSLGlCQUFTLElBREQ7QUFFUkwsTUFBQUEsSUFBSSxFQUFFUCxFQUFFLENBQUNRLE1BRkQ7QUFHUkMsTUFBQUEsWUFBWSxFQUFFO0FBSE4sS0FwQko7QUF5QlJJLElBQUFBLFVBQVUsRUFBRTtBQUNSLGlCQUFTLElBREQ7QUFFUk4sTUFBQUEsSUFBSSxFQUFFUCxFQUFFLENBQUNRLE1BRkQ7QUFHUkMsTUFBQUEsWUFBWSxFQUFFO0FBSE4sS0F6Qko7QUErQlI7QUFDQUssSUFBQUEsaUJBQWlCLEVBQUU7QUFDZixpQkFBUyxJQURNO0FBRWZQLE1BQUFBLElBQUksRUFBRVAsRUFBRSxDQUFDUSxNQUZNO0FBR2ZDLE1BQUFBLFlBQVksRUFBRTtBQUhDLEtBaENYO0FBcUNSTSxJQUFBQSxrQkFBa0IsRUFBRTtBQUNoQixpQkFBUyxJQURPO0FBRWhCUixNQUFBQSxJQUFJLEVBQUVQLEVBQUUsQ0FBQ1EsTUFGTztBQUdoQkMsTUFBQUEsWUFBWSxFQUFFO0FBSEUsS0FyQ1o7QUEyQ1I7QUFDQU8sSUFBQUEsYUFBYSxFQUFFO0FBQ1gsaUJBQVMsSUFERTtBQUVYVCxNQUFBQSxJQUFJLEVBQUVQLEVBQUUsQ0FBQ2lCLEtBRkU7QUFHWFIsTUFBQUEsWUFBWSxFQUFFO0FBSEgsS0E1Q1A7QUFpRFJTLElBQUFBLGFBQWEsRUFBRTtBQUNYLGlCQUFTLElBREU7QUFFWFgsTUFBQUEsSUFBSSxFQUFFUCxFQUFFLENBQUNpQixLQUZFO0FBR1hSLE1BQUFBLFlBQVksRUFBRTtBQUhILEtBakRQO0FBdURSVSxJQUFBQSxpQkFBaUIsRUFBRW5CLEVBQUUsQ0FBQ0ssSUF2RGQ7QUF3RFJlLElBQUFBLGtCQUFrQixFQUFFcEIsRUFBRSxDQUFDSyxJQXhEZjtBQTBEUmdCLElBQUFBLFdBQVcsRUFBRXJCLEVBQUUsQ0FBQ2lCLEtBMURSO0FBNERSSyxJQUFBQSxRQUFRLEVBQUV0QixFQUFFLENBQUNLLElBNURMO0FBOERSa0IsSUFBQUEsWUFBWSxFQUFFdkIsRUFBRSxDQUFDSztBQTlEVCxHQUhQO0FBb0VMO0FBRUFtQixFQUFBQSxNQXRFSyxvQkFzRUs7QUFDTnpCLElBQUFBLFFBQVEsQ0FBQzBCLFVBQVQsR0FBc0I1QixLQUFLLENBQUM2QixnQkFBNUI7QUFDQTNCLElBQUFBLFFBQVEsQ0FBQzRCLGVBQVQsR0FBMkI1QixRQUFRLENBQUMwQixVQUFwQztBQUVBLFNBQUtHLHlCQUFMLEdBQWlDLEtBQWpDO0FBQ0EsU0FBS0MsMEJBQUwsR0FBa0MsS0FBbEM7QUFDQSxTQUFLQyx5QkFBTCxHQUFpQyxLQUFqQztBQUVBLFNBQUtDLHFCQUFMLEdBQTZCLEtBQTdCO0FBRUFoQyxJQUFBQSxRQUFRLENBQUNpQyxTQUFULEdBQXFCLElBQXJCO0FBRUEsU0FBS0MsWUFBTCxDQUFrQixZQUFXO0FBQ3pCLFVBQUdqQyxFQUFFLENBQUNrQyxJQUFILENBQVFDLFlBQVIsR0FBdUJDLEtBQXZCLEdBQStCcEMsRUFBRSxDQUFDa0MsSUFBSCxDQUFRQyxZQUFSLEdBQXVCRSxNQUF6RCxFQUFnRTtBQUM1RHRDLFFBQUFBLFFBQVEsQ0FBQ2lDLFNBQVQsR0FBcUIsS0FBckI7QUFDSCxPQUZELE1BRU87QUFDSGpDLFFBQUFBLFFBQVEsQ0FBQ2lDLFNBQVQsR0FBcUIsSUFBckI7QUFDSDtBQUNKLEtBTkQsRUFNRyxDQU5IO0FBT0gsR0F6Rkk7QUEyRkxNLEVBQUFBLEtBM0ZLLG1CQTJGSTtBQUNMLFNBQUtmLFlBQUwsQ0FBa0JnQixNQUFsQixHQUEyQixLQUEzQjtBQUNILEdBN0ZJO0FBK0ZMQyxFQUFBQSxNQS9GSyxrQkErRkdDLEVBL0ZILEVBK0ZPO0FBQ1IsU0FBS0MsSUFBTCxDQUFVQyxXQUFWLENBQXNCLEtBQUt2QyxZQUFMLENBQWtCd0MsV0FBbEIsRUFBdEI7QUFFQSxTQUFLNUIsYUFBTCxDQUFtQjZCLE1BQW5CLEdBQTZCOUMsUUFBUSxDQUFDMEIsVUFBVCxHQUFzQjFCLFFBQVEsQ0FBQzRCLGVBQWhDLEdBQW1ELEdBQW5ELEdBQXlENUIsUUFBUSxDQUFDMEIsVUFBOUY7O0FBRUEsUUFBRyxDQUFDMUIsUUFBUSxDQUFDK0MsbUJBQWIsRUFBaUM7QUFDN0IsVUFBRy9DLFFBQVEsQ0FBQzBCLFVBQVQsR0FBc0IxQixRQUFRLENBQUM0QixlQUEvQixJQUFrRDlCLEtBQUssQ0FBQ2tELHNCQUEzRCxFQUFrRjtBQUM5RWhELFFBQUFBLFFBQVEsQ0FBQytDLG1CQUFULEdBQStCLElBQS9CO0FBQ0g7QUFDSjs7QUFFRCxRQUFHLENBQUMsS0FBS2xCLHlCQUFOLElBQW1DN0IsUUFBUSxDQUFDaUQsa0JBQS9DLEVBQWtFO0FBQzlELFdBQUtwQix5QkFBTCxHQUFpQyxJQUFqQztBQUNBLFdBQUtxQixrQkFBTDtBQUNIOztBQUVELFFBQUcsQ0FBQyxLQUFLcEIsMEJBQU4sSUFBb0M5QixRQUFRLENBQUMrQyxtQkFBaEQsRUFBb0U7QUFDaEUsV0FBS2pCLDBCQUFMLEdBQWtDLElBQWxDO0FBQ0EsV0FBS3FCLG1CQUFMO0FBQ0gsS0FuQk8sQ0FxQlI7OztBQUNBLFFBQUcsQ0FBQyxLQUFLcEIseUJBQU4sSUFBbUMvQixRQUFRLENBQUNvRCxrQkFBL0MsRUFBa0U7QUFDOUQsV0FBS3JCLHlCQUFMLEdBQWlDLElBQWpDO0FBQ0EsV0FBS3NCLGtCQUFMO0FBQ0g7O0FBRUQsUUFBRyxDQUFDLEtBQUtyQixxQkFBTixJQUErQmhDLFFBQVEsQ0FBQ3NELGtCQUEzQyxFQUE4RDtBQUMxRCxXQUFLdEIscUJBQUwsR0FBNkIsSUFBN0I7QUFDQSxXQUFLdUIsZ0JBQUw7QUFDSDtBQUNKLEdBOUhJO0FBZ0lMTCxFQUFBQSxrQkFoSUssZ0NBZ0llO0FBQ2hCakQsSUFBQUEsRUFBRSxDQUFDdUQsR0FBSCxDQUFPLGNBQVA7QUFDQSxTQUFLbEMsV0FBTCxDQUFpQnFCLElBQWpCLENBQXNCSCxNQUF0QixHQUErQixLQUEvQjtBQUNILEdBbklJO0FBcUlMVyxFQUFBQSxtQkFySUssaUNBcUlnQjtBQUNqQmxELElBQUFBLEVBQUUsQ0FBQ3VELEdBQUgsQ0FBTyxlQUFQO0FBQ0EsU0FBS2pDLFFBQUwsQ0FBY2lCLE1BQWQsR0FBdUIsS0FBdkI7QUFFQSxTQUFLbEIsV0FBTCxDQUFpQnFCLElBQWpCLENBQXNCSCxNQUF0QixHQUErQixJQUEvQjtBQUNBLFNBQUtsQixXQUFMLENBQWlCd0IsTUFBakIsR0FBMEIscUJBQTFCLENBTGlCLENBT2pCO0FBRUE7QUFDQTtBQUNBO0FBQ0gsR0FqSkk7QUFtSkxPLEVBQUFBLGtCQW5KSyxnQ0FtSmU7QUFDaEJwRCxJQUFBQSxFQUFFLENBQUN1RCxHQUFILENBQU8sY0FBUDtBQUNBLFNBQUtsQyxXQUFMLENBQWlCcUIsSUFBakIsQ0FBc0JILE1BQXRCLEdBQStCLEtBQS9CO0FBQ0gsR0F0Skk7QUF3SkxlLEVBQUFBLGdCQXhKSyw4QkF3SmE7QUFDZCxTQUFLL0IsWUFBTCxDQUFrQmdCLE1BQWxCLEdBQTJCLElBQTNCO0FBQ0EsU0FBS2hCLFlBQUwsQ0FBa0JvQixXQUFsQixDQUE4QixDQUE5QixFQUFpQyxDQUFqQztBQUNIO0FBM0pJLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENPTlNUID0gcmVxdWlyZShcIkNPTlNUXCIpO1xyXG5jb25zdCBHYW1lSW5mbyA9IHJlcXVpcmUoXCJHYW1lSW5mb1wiKTtcclxuXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgRm9sbG93Q2FtZXJhOiBjYy5Ob2RlLFxyXG5cclxuICAgICAgICAvLyBCdG4gTW92ZVxyXG4gICAgICAgIEJ1dHRvbk1vdmVMZWZ0OiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkJ1dHRvbixcclxuICAgICAgICAgICAgc2VyaWFsaXphYmxlOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgQnV0dG9uTW92ZVJpZ2h0OiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkJ1dHRvbixcclxuICAgICAgICAgICAgc2VyaWFsaXphYmxlOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLy8gQnRuIEF0dGFja1xyXG4gICAgICAgIEJ1dHRvbkF0dGFjazoge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5CdXR0b24sXHJcbiAgICAgICAgICAgIHNlcmlhbGl6YWJsZTogdHJ1ZSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIEJ1dHRvbkp1bXA6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuQnV0dG9uLFxyXG4gICAgICAgICAgICBzZXJpYWxpemFibGU6IHRydWUsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBCdXR0b25EYXNoOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkJ1dHRvbixcclxuICAgICAgICAgICAgc2VyaWFsaXphYmxlOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gQnV0dG9uIFdlYXBvblxyXG4gICAgICAgIEJ1dHRvbldlYXBvblN3b3JkOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkJ1dHRvbixcclxuICAgICAgICAgICAgc2VyaWFsaXphYmxlOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgQnV0dG9uV2VhcG9uQXJjaGVyOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkJ1dHRvbixcclxuICAgICAgICAgICAgc2VyaWFsaXphYmxlOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIC8vIEluZm9cclxuICAgICAgICBFbmVteUxpdmVUZXh0OiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkxhYmVsLFxyXG4gICAgICAgICAgICBzZXJpYWxpemFibGU6IHRydWUsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBTdGlja0xpZmVUZXh0OiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkxhYmVsLFxyXG4gICAgICAgICAgICBzZXJpYWxpemFibGU6IHRydWUsXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgSGFuZFR1dG9yaWFsU3dvcmQ6IGNjLk5vZGUsXHJcbiAgICAgICAgSGFuZFR1dG9yaWFsQXJjaGVyOiBjYy5Ob2RlLFxyXG5cclxuICAgICAgICBNZXNzYWdlVGV4dDogY2MuTGFiZWwsXHJcblxyXG4gICAgICAgIFRlbXBXYWxsOiBjYy5Ob2RlLFxyXG5cclxuICAgICAgICBJbnN0YWxsUG9wdXA6IGNjLk5vZGUsXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgR2FtZUluZm8uVG90YWxFbmVteSA9IENPTlNULlRvdGFsRW5lbXlJbkdhbWU7XHJcbiAgICAgICAgR2FtZUluZm8uVG90YWxFbmVteUFsaXZlID0gR2FtZUluZm8uVG90YWxFbmVteTtcclxuXHJcbiAgICAgICAgdGhpcy5fdHV0b3JpYWxEb25lU3RhZ2UxQ2FsbGVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5fdHV0b3JpYWxTdGFydFN0YWdlMkNhbGxlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuX3R1dG9yaWFsRG9uZVN0YWdlMkNhbGxlZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICB0aGlzLl9pc1Nob3dlZFBvcHVwSW5zdGFsbCA9IGZhbHNlO1xyXG5cclxuICAgICAgICBHYW1lSW5mby5HYW1lUGF1c2UgPSB0cnVlO1xyXG5cclxuICAgICAgICB0aGlzLnNjaGVkdWxlT25jZShmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYoY2Mudmlldy5nZXRGcmFtZVNpemUoKS53aWR0aCA+IGNjLnZpZXcuZ2V0RnJhbWVTaXplKCkuaGVpZ2h0KXtcclxuICAgICAgICAgICAgICAgIEdhbWVJbmZvLkdhbWVQYXVzZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgR2FtZUluZm8uR2FtZVBhdXNlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDMpO1xyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICAgICAgdGhpcy5JbnN0YWxsUG9wdXAuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB9LFxyXG5cclxuICAgIHVwZGF0ZSAoZHQpIHtcclxuICAgICAgICB0aGlzLm5vZGUuc2V0UG9zaXRpb24odGhpcy5Gb2xsb3dDYW1lcmEuZ2V0UG9zaXRpb24oKSk7XHJcblxyXG4gICAgICAgIHRoaXMuRW5lbXlMaXZlVGV4dC5zdHJpbmcgPSAoR2FtZUluZm8uVG90YWxFbmVteSAtIEdhbWVJbmZvLlRvdGFsRW5lbXlBbGl2ZSkgKyBcIi9cIiArIEdhbWVJbmZvLlRvdGFsRW5lbXk7XHJcblxyXG4gICAgICAgIGlmKCFHYW1lSW5mby5UdXRvcmlhbFN0YXJ0U3RhZ2UyKXtcclxuICAgICAgICAgICAgaWYoR2FtZUluZm8uVG90YWxFbmVteSAtIEdhbWVJbmZvLlRvdGFsRW5lbXlBbGl2ZSA+PSBDT05TVC5OdW1FbmVteUZvclN0YXJ0U3RhZ2UyKXtcclxuICAgICAgICAgICAgICAgIEdhbWVJbmZvLlR1dG9yaWFsU3RhcnRTdGFnZTIgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZighdGhpcy5fdHV0b3JpYWxEb25lU3RhZ2UxQ2FsbGVkICYmIEdhbWVJbmZvLlR1dG9yaWFsRG9uZVN0YWdlMSl7XHJcbiAgICAgICAgICAgIHRoaXMuX3R1dG9yaWFsRG9uZVN0YWdlMUNhbGxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuY2FsbFdoZW5TdGFnZTFEb25lKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZighdGhpcy5fdHV0b3JpYWxTdGFydFN0YWdlMkNhbGxlZCAmJiBHYW1lSW5mby5UdXRvcmlhbFN0YXJ0U3RhZ2UyKXtcclxuICAgICAgICAgICAgdGhpcy5fdHV0b3JpYWxTdGFydFN0YWdlMkNhbGxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuY2FsbFdoZW5TdGFnZTJTdGFydCgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gY2MubG9nKEdhbWVJbmZvLlR1dG9yaWFsRG9uZVN0YWdlMik7XHJcbiAgICAgICAgaWYoIXRoaXMuX3R1dG9yaWFsRG9uZVN0YWdlMkNhbGxlZCAmJiBHYW1lSW5mby5UdXRvcmlhbERvbmVTdGFnZTIpe1xyXG4gICAgICAgICAgICB0aGlzLl90dXRvcmlhbERvbmVTdGFnZTJDYWxsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLmNhbGxXaGVuU3RhZ2UyRG9uZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoIXRoaXMuX2lzU2hvd2VkUG9wdXBJbnN0YWxsICYmIEdhbWVJbmZvLklzU2hvd1BvcHVwSW5zdGFsbCl7XHJcbiAgICAgICAgICAgIHRoaXMuX2lzU2hvd2VkUG9wdXBJbnN0YWxsID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5zaG93UG9wdXBJbnN0YWxsKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBjYWxsV2hlblN0YWdlMURvbmUoKXtcclxuICAgICAgICBjYy5sb2coXCJTdGFnZSAxIERvbmVcIik7XHJcbiAgICAgICAgdGhpcy5NZXNzYWdlVGV4dC5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgfSxcclxuXHJcbiAgICBjYWxsV2hlblN0YWdlMlN0YXJ0KCl7XHJcbiAgICAgICAgY2MubG9nKFwiU3RhZ2UgMiBTdGFydFwiKTtcclxuICAgICAgICB0aGlzLlRlbXBXYWxsLmFjdGl2ZSA9IGZhbHNlO1xyXG5cclxuICAgICAgICB0aGlzLk1lc3NhZ2VUZXh0Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLk1lc3NhZ2VUZXh0LnN0cmluZyA9IFwiQ0hBTkdFIFlPVVIgV0VBUE9OIVwiO1xyXG5cclxuICAgICAgICAvLyBHYW1lSW5mby5HYW1lUGF1c2UgPSB0cnVlO1xyXG5cclxuICAgICAgICAvLyB0aGlzLnNjaGVkdWxlT25jZShmdW5jdGlvbigpIHtcclxuICAgICAgICAvLyAgICAgR2FtZUluZm8uR2FtZVBhdXNlID0gZmFsc2U7XHJcbiAgICAgICAgLy8gfSwgMyk7XHJcbiAgICB9LFxyXG5cclxuICAgIGNhbGxXaGVuU3RhZ2UyRG9uZSgpe1xyXG4gICAgICAgIGNjLmxvZyhcIlN0YWdlIDIgRG9uZVwiKTtcclxuICAgICAgICB0aGlzLk1lc3NhZ2VUZXh0Lm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB9LFxyXG5cclxuICAgIHNob3dQb3B1cEluc3RhbGwoKXtcclxuICAgICAgICB0aGlzLkluc3RhbGxQb3B1cC5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuSW5zdGFsbFBvcHVwLnNldFBvc2l0aW9uKDAsIDApO1xyXG4gICAgfVxyXG59KTtcclxuIl19