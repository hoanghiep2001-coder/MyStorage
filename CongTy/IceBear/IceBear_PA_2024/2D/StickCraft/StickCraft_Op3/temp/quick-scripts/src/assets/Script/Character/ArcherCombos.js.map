{"version":3,"sources":["assets\\Script\\Character\\ArcherCombos.js"],"names":["require","EnStickState","EnStickMode","CONST","AnimNameStick","GameInfo","ArrowStick","cc","Class","Component","properties","PrefabArrow","type","Prefab","NodeBow","Node","IsOnAttacking","get","_isAttacking","onLoad","_nearestEnemyNode","_nearestEnemyDistance","MaxDistanceEnemyArcher","_rigidBody","node","getComponent","RigidBody","_skeleton","getComponentInChildren","sp","Skeleton","onStartAnimation","animationName","StickMode","Archer","ArcherAngleStraight","scheduleOnce","fire","ArcherAngleUp","onCompleteAnimation","start","onClick","isPlayerFacing","log","name","dir","getPosition","sub","normalize","_angle","convertRad2Deg","Math","atan2","y","abs","x","_dir","animNameAtk","setAnimation","v2","scaleX","_stickSignWhenClick","_isFired","endAttack","radians","pi","PI","createArrow","arrowObj","instantiate","parent","addChild","position","convertToWorldSpaceAR","arrowLogic","Launch","checkNearestEnemy","enemyNode","distance","setNearestEnemy","removeNearestEnemy","linearVelocity","StickState","Run","ArcherRun","Idle","ArcherIdle"],"mappings":"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","sourceRoot":"/","sourcesContent":["const { EnStickState, EnStickMode } = require(\"GameEnum\");\r\nconst CONST = require(\"CONST\");\r\nvar AnimNameStick = require(\"AnimNameStick\");\r\nvar GameInfo = require(\"GameInfo\");\r\nvar ArrowStick = require(\"ArrowStick\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        PrefabArrow: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        NodeBow: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        IsOnAttacking: {\r\n            get() {return this._isAttacking;}\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this._nearestEnemyNode = null;\r\n        this._nearestEnemyDistance = CONST.MaxDistanceEnemyArcher;\r\n\r\n        this._rigidBody = this.node.getComponent(cc.RigidBody);\r\n        this._skeleton = this.getComponentInChildren(sp.Skeleton);\r\n    },\r\n\r\n    onStartAnimation(animationName){\r\n        if(GameInfo.StickMode != EnStickMode.Archer) return;\r\n\r\n        if(animationName == AnimNameStick.ArcherAngleStraight){\r\n            this.scheduleOnce(function() {\r\n                this.fire(0);\r\n            }, 0.15);\r\n        }\r\n        else if (animationName == AnimNameStick.ArcherAngleUp){\r\n            this.scheduleOnce(function() {\r\n                this.fire(1);\r\n            }, 0.15);\r\n        }\r\n    },\r\n\r\n    onCompleteAnimation(animationName){\r\n        if(animationName == AnimNameStick.ArcherAngleStraight){\r\n\r\n        }\r\n        else if (animationName == AnimNameStick.ArcherAngleUp){\r\n\r\n        }\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    onClick(){\r\n        if(GameInfo.StickMode != EnStickMode.Archer) return;\r\n\r\n        if(this._isAttacking) return;\r\n\r\n        // cc.log(\"On Click \", this._nearestEnemyNode);\r\n\r\n        if(this._nearestEnemyNode != null && this.isPlayerFacing(this._nearestEnemyNode)){\r\n            cc.log(this._nearestEnemyNode.name, this.isPlayerFacing(this._nearestEnemyNode));\r\n\r\n            let dir = this._nearestEnemyNode.getPosition().sub(this.node.getPosition());\r\n            // cc.log(\"Check Nearest Enemy \", this._nearestEnemyNode.getPosition(), this.node.getPosition(), dir);\r\n            dir = dir.normalize();\r\n            // cc.log(\"Normalize Dir \", dir);\r\n\r\n            this._angle = this.convertRad2Deg(Math.atan2(dir.y, Math.abs(dir.x)));\r\n            this._dir = dir;\r\n\r\n            // cc.log(\"Archer Fire \", this._angle, this._dir);\r\n\r\n            let animNameAtk = AnimNameStick.ArcherAngleStraight;\r\n            if(this._angle > 20) animNameAtk = AnimNameStick.ArcherAngleUp;\r\n\r\n            this._skeleton.setAnimation(0, animNameAtk, false);\r\n        } else {\r\n            this._angle = 0;\r\n            this._dir = cc.v2(1 * this.node.scaleX, 0);\r\n            this._skeleton.setAnimation(0, AnimNameStick.ArcherAngleStraight, false);\r\n        }\r\n\r\n        this._stickSignWhenClick = this.node.scaleX;\r\n\r\n        this._isFired = false;\r\n        this._isAttacking = true;\r\n\r\n        this.scheduleOnce(function() {\r\n            this.endAttack();\r\n        }, 0.5);\r\n        \r\n        cc.log(\"archer mode click fire\");\r\n    },\r\n\r\n    convertRad2Deg(radians){\r\n        var pi = Math.PI;\r\n        return radians * (180/pi);\r\n    },\r\n\r\n    fire(type){\r\n        this._isFired = true;\r\n\r\n        // Angle Straight\r\n        if(type == 0){\r\n            this.createArrow(type);\r\n        }\r\n        // Angle Up\r\n        else if(type == 1){\r\n            this.createArrow(type);\r\n        }\r\n    },\r\n\r\n    createArrow(type){\r\n        let arrowObj = cc.instantiate(this.PrefabArrow);\r\n        this.node.parent.addChild(arrowObj);\r\n\r\n        arrowObj.position = this.node.convertToWorldSpaceAR(this.NodeBow.getPosition());\r\n\r\n        if(this.node.scaleX !=  this._stickSignWhenClick){\r\n            this._dir = cc.v2(this._dir.x * -1, this._dir.y);\r\n        }\r\n\r\n        var arrowLogic = arrowObj.getComponent(ArrowStick);\r\n        arrowLogic.Launch(this._dir);\r\n    },\r\n\r\n    checkNearestEnemy(enemyNode, distance){\r\n        if(distance < this._nearestEnemyDistance){\r\n            this._nearestEnemyDistance = distance;\r\n            this.setNearestEnemy(enemyNode);\r\n        }\r\n    },\r\n\r\n    setNearestEnemy(enemyNode){\r\n        this._nearestEnemyNode = enemyNode;\r\n    },\r\n\r\n    removeNearestEnemy(enemyNode){\r\n        if(this._nearestEnemyNode == enemyNode){\r\n            this._nearestEnemyNode = null;\r\n            this._nearestEnemyDistance = CONST.MaxDistanceEnemyArcher;\r\n        }\r\n    },\r\n\r\n    endAttack(){\r\n        // this.resetSpeedAnim();\r\n\r\n        this._isAttacking = false;\r\n\r\n        let linearVelocity = this._rigidBody.linearVelocity;\r\n        if (linearVelocity.x > 0.01 || linearVelocity.x < -0.01){\r\n            GameInfo.StickState = EnStickState.Run;\r\n            this._skeleton.setAnimation(0, AnimNameStick.ArcherRun, true);\r\n        } else {\r\n            GameInfo.StickState = EnStickState.Idle;\r\n            this._skeleton.setAnimation(0, AnimNameStick.ArcherIdle, true);\r\n        }\r\n    },\r\n\r\n    isPlayerFacing(enemyNode){\r\n        if (this.node.x < enemyNode.x && this.node.scaleX > 0\r\n            || this.node.x > enemyNode.x && this.node.scaleX < 0){\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n});\r\n"]}