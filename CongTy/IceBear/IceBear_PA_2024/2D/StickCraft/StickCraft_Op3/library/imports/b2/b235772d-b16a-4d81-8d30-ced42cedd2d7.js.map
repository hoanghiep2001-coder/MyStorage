{"version":3,"sources":["assets\\Script\\Enemy\\EnemyBehavior.js"],"names":["require","EnStickMode","EnFacing","EnEnemies","EnEnemyState","DetectPlayer","Player3D","EnemyBullet","HealthBarEnemy","GameController","GameInfo","CONST","cc","Class","Component","properties","Player","HealthBar","EnemyId","None","type","Speed","Float","NodePointA","Node","serializable","NodePointB","Facing","Left","CollistionDetectPlayer","MaxHeath","BaseAttack","FrequenceAttack","PrefabBullet","Prefab","NodeBarrel","CollisionAttack","BloodParticle","ParticleSystem3D","onLoad","_pointA","node","convertToWorldSpaceAR","getPosition","x","active","_pointB","_skeleton","getComponentInChildren","sp","Skeleton","_stopMove","_isDetectPlayer","_tick","_waitFrequencyAttack","ZombieSpeed","ZombieFrequenceAttack","Zombie","init","ZombieMaxHP","PoisonVineMaxHP","setStartListener","trackEntry","animationName","animation","name","onStartAnimation","setCompleteListener","onCompleteAnimation","endAttack","start","GamePause","setAnimation","_currentState","Walk","_state","Idle","update","dt","updateAnimationState","moveBettweenTwoPoint","detectPlayer","calculateDistancePlayer","Right","newPosX","setPosition","y","flip","scale","v2","IsDetectPlayer","actionWhenDetectPlayer","faceToPlayer","meleeAttack","PoisonVine","archerAttack","scheduleOnce","isFacingWithPlayer","isAlive","createBullet","bullet","instantiate","parent","addChild","position","bulletLogic","getComponent","dir","Launch","isPlayerFacing","scaleX","StickMode","Archer","distance","Math","abs","MaxDistanceEnemyArcher","checkNearestEnemy","removeNearestEnemy","hit","damp","StickBaseAttack","decrement","play","TutorialDoneStage1","TutorialStartStage2","TutorialDoneStage2","die","effectDie","TotalEnemyAlive","destroy","rd","RigidBody","RigidBodyType","Dynamic","gravityScale","fixedRotation","tween","to","angle","getSidePlayer","applyForceToCenter","random","onCollisionEnter","other","self","group"],"mappings":"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","sourceRoot":"/","sourcesContent":["const { EnStickMode, EnFacing, EnEnemies, EnEnemyState} = require(\"GameEnum\");\r\nvar DetectPlayer = require(\"DetectPlayer\");\r\nvar Player3D = require(\"Player3D\");\r\nvar EnemyBullet = require(\"EnemyBullet\");\r\nvar HealthBarEnemy = require(\"HealthBarEnemy\");\r\nvar GameController = require(\"GameController\");\r\nconst GameInfo = require(\"GameInfo\");\r\nconst CONST = require(\"CONST\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        Player: Player3D,\r\n        HealthBar: HealthBarEnemy,\r\n        EnemyId: {\r\n            default: EnEnemies.None,\r\n            type: EnEnemies\r\n        },\r\n        Speed: {\r\n            default: 2,\r\n            type: cc.Float\r\n        },\r\n        NodePointA: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n        NodePointB: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n        Facing: {\r\n            default: EnFacing.Left,\r\n            type: EnFacing,\r\n        },\r\n        CollistionDetectPlayer: DetectPlayer,\r\n        MaxHeath: 100,\r\n        BaseAttack: 10,\r\n        FrequenceAttack: 2,\r\n        PrefabBullet: cc.Prefab,\r\n        NodeBarrel: cc.Node,\r\n        CollisionAttack: cc.Node,\r\n\r\n        // Particle Effect\r\n        BloodParticle: cc.ParticleSystem3D,\r\n    },\r\n\r\n    onLoad () {\r\n        if(this.NodePointA != null){\r\n           this._pointA = this.node.convertToWorldSpaceAR(this.NodePointA.getPosition()).x;\r\n           this.NodePointA.active = false;\r\n        } else {\r\n            this._pointA = 0;\r\n        }\r\n\r\n        if(this.NodePointB != null){\r\n            this._pointB = this.node.convertToWorldSpaceAR(this.NodePointB.getPosition()).x;\r\n            this.NodePointB.active = false;\r\n        } else {\r\n            this._pointB = 0;\r\n        }\r\n\r\n        // console.log(\"Log Move Two Point: \" + this._pointA + \" \" + this._pointB);\r\n\r\n        // Get Component Animator\r\n        this._skeleton = this.getComponentInChildren(sp.Skeleton);\r\n\r\n        this._stopMove = false;\r\n\r\n        this._isDetectPlayer = false;\r\n\r\n        this._tick = 0;\r\n\r\n        this._waitFrequencyAttack = false;\r\n\r\n        this.Speed = CONST.ZombieSpeed;\r\n\r\n        this.FrequenceAttack = CONST.ZombieFrequenceAttack;\r\n\r\n        if(this.EnemyId == EnEnemies.Zombie) this.HealthBar.init(CONST.ZombieMaxHP);\r\n        else this.HealthBar.init(CONST.PoisonVineMaxHP);\r\n\r\n        this._skeleton.setStartListener(trackEntry => {\r\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            this.onStartAnimation(animationName);\r\n        });\r\n\r\n        this._skeleton.setCompleteListener((trackEntry) => {\r\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            this.onCompleteAnimation(animationName);\r\n        });\r\n    },\r\n\r\n    onStartAnimation(animationName){\r\n        if(animationName == \"atk\"){\r\n\r\n        }\r\n    },\r\n\r\n    onCompleteAnimation(animationName){\r\n        if(animationName == \"atk\"){\r\n            this.endAttack();\r\n        }\r\n    },\r\n\r\n    start () {\r\n\r\n        if(this.Speed > 0 && !GameInfo.GamePause){\r\n            this._skeleton.setAnimation(0, \"walk\", true);\r\n            this._currentState = EnEnemyState.Walk;\r\n            this._state = EnEnemyState.Walk;\r\n        } else {\r\n            this._skeleton.setAnimation(0, \"idle\", true);\r\n            this._currentState = EnEnemyState.Idle;\r\n            this._state = EnEnemyState.Idle;\r\n        }\r\n    },\r\n\r\n    update (dt) {\r\n        if(GameInfo.GamePause){\r\n            this._state = EnEnemyState.Idle;\r\n            this.updateAnimationState();\r\n            return;\r\n        } \r\n\r\n        this.moveBettweenTwoPoint(dt);\r\n\r\n        this.detectPlayer(dt);\r\n\r\n        this.calculateDistancePlayer();\r\n\r\n        this.updateAnimationState();\r\n    },\r\n\r\n    updateAnimationState(){\r\n        if(this._currentState != this._state){\r\n            if(this._state == EnEnemyState.Walk){\r\n                this._skeleton.setAnimation(0, \"walk\", true);\r\n            } else if(this._state == EnEnemyState.Idle){\r\n                this._skeleton.setAnimation(0, \"idle\", true);\r\n            }\r\n\r\n            this._currentState = this._state;\r\n        }\r\n    },\r\n\r\n    moveBettweenTwoPoint (dt) {\r\n        if(GameInfo.GamePause) return;\r\n\r\n        if(this.Speed <= 0 || this._stopMove) return;\r\n\r\n        if (this.Facing == EnFacing.Right)\r\n            this.newPosX = this.node.getPosition().x + 1 * this.Speed * 10 * dt;\r\n        else\r\n            this.newPosX = this.node.getPosition().x + -1 * this.Speed * 10 * dt;\r\n        \r\n        this.node.setPosition(this.newPosX, this.node.getPosition().y);\r\n\r\n        if ((this.node.getPosition().x >= this._pointB && this.Facing == EnFacing.Right ||\r\n            this.node.getPosition().x <= this._pointA && this.Facing == EnFacing.Left)){\r\n            this.flip();\r\n        }\r\n\r\n        this._state = EnEnemyState.Walk;\r\n    },\r\n\r\n    flip () {\r\n        if(this.Facing == EnFacing.Left){\r\n            this.Facing = EnFacing.Right;\r\n            this.node.scale = cc.v2(-1, 1);\r\n        } else {\r\n            this.Facing = EnFacing.Left;\r\n            this.node.scale = cc.v2(1, 1);\r\n        }\r\n    },\r\n\r\n    detectPlayer (dt) {\r\n        if(this.CollistionDetectPlayer.IsDetectPlayer && !this._isDetectPlayer){\r\n            this._isDetectPlayer = true;\r\n            this._stopMove = true;\r\n            this.actionWhenDetectPlayer();\r\n        }\r\n\r\n        if(!this.CollistionDetectPlayer.IsDetectPlayer && this._isDetectPlayer){\r\n            this._isDetectPlayer = false;\r\n            this._stopMove = false;\r\n\r\n            if(this.Speed > 0) this._state = EnEnemyState.Walk;\r\n            else this._state = EnEnemyState.Idle;\r\n        }\r\n\r\n        if(this._isDetectPlayer){\r\n            if(!this._waitFrequencyAttack){\r\n                this.actionWhenDetectPlayer();\r\n            } else {\r\n                \r\n            }\r\n        }\r\n    },\r\n\r\n    actionWhenDetectPlayer(){\r\n        // console.log(\"Call Attack ==>\", this._waitFrequencyAttack);\r\n        if(this._waitFrequencyAttack) return;\r\n\r\n        this._waitFrequencyAttack = true;\r\n\r\n        this.faceToPlayer();\r\n        this._skeleton.setAnimation(0, \"atk\", false);\r\n\r\n        if(this.EnemyId == EnEnemies.Zombie){\r\n            this.meleeAttack();\r\n        } else if(this.EnemyId == EnEnemies.PoisonVine){\r\n            this.archerAttack();\r\n        }\r\n\r\n        this.scheduleOnce(function() {\r\n            this._waitFrequencyAttack = false;\r\n        }, this.FrequenceAttack);\r\n    },\r\n\r\n    faceToPlayer(){\r\n        if(!this.isFacingWithPlayer()){\r\n            this.flip();\r\n        }\r\n    },\r\n\r\n    isFacingWithPlayer(){\r\n        if(this.Player.node.getPosition().x < this.node.getPosition().x && this.Facing == EnFacing.Right\r\n        || this.Player.node.getPosition().x > this.node.getPosition().x && this.Facing == EnFacing.Left){\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    meleeAttack(){\r\n        // console.log(\"Melee Attack\");\r\n        this.scheduleOnce(function() {\r\n            this.CollisionAttack.active = true;\r\n        }, 0.3);\r\n    },\r\n    \r\n    archerAttack(){\r\n        // console.log(\"Archer Attack\");\r\n        this.scheduleOnce(function() {\r\n            if(!this.HealthBar.isAlive()) return;\r\n            this.createBullet();\r\n        }, 0.3);\r\n    },\r\n\r\n    createBullet(){\r\n        let bullet = cc.instantiate(this.PrefabBullet);\r\n        this.node.parent.addChild(bullet);\r\n\r\n        bullet.position = this.node.convertToWorldSpaceAR(this.NodeBarrel.getPosition());\r\n\r\n        let bulletLogic = bullet.getComponent(EnemyBullet);\r\n\r\n        let dir = 1;\r\n        if(this.Facing == EnFacing.Left) dir = -1;\r\n\r\n        bulletLogic.Launch(this.BaseAttack, dir);\r\n\r\n        // console.log(\"Create Bullet: \" + bullet.getPosition());\r\n    },\r\n\r\n    isPlayerFacing(){\r\n        if (this.Player.node.x < this.node.x && this.Player.node.scaleX > 0\r\n            || this.Player.node.x > this.node.x && this.Player.node.scaleX < 0){\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    calculateDistancePlayer(){\r\n        if(!this.HealthBar.isAlive()) return;\r\n\r\n        if(GameInfo.StickMode != EnStickMode.Archer) return;\r\n\r\n        if(!this.isPlayerFacing()) return;\r\n\r\n        let distance = Math.abs(this.node.x - this.Player.node.x);\r\n\r\n        if(distance < CONST.MaxDistanceEnemyArcher){\r\n            this.Player.checkNearestEnemy(this.node, distance);\r\n        } else {\r\n            this.Player.removeNearestEnemy(this.node);\r\n        }\r\n    },\r\n\r\n    hit(){\r\n        if(!this.HealthBar.isAlive()) return;\r\n\r\n        let damp = CONST.StickBaseAttack;\r\n        this.HealthBar.decrement(damp);\r\n\r\n        this.BloodParticle.play();\r\n\r\n        if(!GameInfo.TutorialDoneStage1) GameInfo.TutorialDoneStage1 = true;\r\n        else if(GameInfo.TutorialStartStage2 && !GameInfo.TutorialDoneStage2) GameInfo.TutorialDoneStage2 = true;\r\n\r\n        if(!this.HealthBar.isAlive()){\r\n            this.die();\r\n        }\r\n    },\r\n\r\n    die(){\r\n        this.effectDie();\r\n        this.scheduleOnce(function() {\r\n            GameInfo.TotalEnemyAlive -= 1;\r\n            this.node.destroy();\r\n        }, 1);\r\n\r\n        this.Player.removeNearestEnemy(this.node);\r\n    },\r\n\r\n    effectDie(){\r\n        this.HealthBar.node.active = false;\r\n        let rd = this.node.getComponent(cc.RigidBody);\r\n        rd.type = cc.RigidBodyType.Dynamic;\r\n        rd.gravityScale = 0.1;\r\n        rd.fixedRotation = false;\r\n\r\n        cc.tween(this.node)\r\n        .to (0.5, {angle: 90 * this.getSidePlayer()})\r\n        .start();\r\n\r\n        rd.applyForceToCenter( cc.v2((Math.random() * 30 + 120) * 250 * this.getSidePlayer(), (Math.random() * 20 + 50) * 250), true);\r\n    },\r\n\r\n    getSidePlayer(){\r\n        if(this.Player.node.x > this.node.x) return -1;\r\n        return 1;\r\n    },\r\n\r\n    onCollisionEnter: function (other, self) {\r\n        if(other.node.group == \"BoxPlayer\"){\r\n            this.hit();\r\n        }\r\n    },\r\n\r\n    endAttack(){\r\n        if(this.Speed <= 0 || this._stopMove){\r\n            this._state = EnEnemyState.Idle;\r\n            this._skeleton.setAnimation(0, \"idle\", true);\r\n        } else {\r\n            this._state = EnEnemyState.Walk;\r\n            this._skeleton.setAnimation(0, \"walk\", true);\r\n        }\r\n    },\r\n});\r\n"]}