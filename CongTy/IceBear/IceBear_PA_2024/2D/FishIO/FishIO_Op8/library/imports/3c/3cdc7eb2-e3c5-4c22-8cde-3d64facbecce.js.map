{"version":3,"sources":["assets\\scripts\\Other\\TouchArea.js"],"names":["require","Constants","cc","Class","Component","properties","positionTouch","Vec2","player","Node","camera","rigidBody","RigidBody","tut","enemyController","gamePlay","btn_revive","start","bodyPlayer","getChildByName","isTouched","node","parent","on","EventType","TOUCH_START","event","active","getComponent","isMove","startCreateEnemy","showBoss","isGameStart","moveWithTouch","TOUCH_MOVE","TOUCH_CANCEL","TOUCH_END","registerReviveAction","handleBtnReviveTouchStart","audioEngine","stopAll","countDie","director","loadScene","getLocation","localTouchPos","convertToNodeSpaceAR","x","y","anglePlayer","misc","radiansToDegrees","Math","atan","angle","scaleX","update","dt","isShowPopupOptions","gameTime","showPopupOptions"],"mappings":"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","sourceRoot":"/","sourcesContent":["const { Constants } = require(\"../Data/Constant\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        positionTouch: cc.Vec2,\r\n        player: cc.Node,\r\n        camera: cc.Node,\r\n        rigidBody: cc.RigidBody,\r\n        tut: cc.Node,\r\n        enemyController: cc.Node,\r\n        gamePlay: cc.Node,\r\n        btn_revive: cc.Node,\r\n    },\r\n\r\n    start () {\r\n        this.bodyPlayer = this.player.getChildByName(\"Body\");\r\n        this.isTouched = false;\r\n\r\n        this.node.parent.on(cc.Node.EventType.TOUCH_START, (event)=>{\r\n            if(this.tut.active){\r\n                this.tut.active = false;\r\n                this.player.getComponent(\"PlayerController\").isMove = true;\r\n                this.enemyController.getComponent(\"EnemyController\").startCreateEnemy();\r\n                this.gamePlay.getComponent(\"GamePlay\").showBoss();\r\n            }\r\n            Constants.isGameStart = true;\r\n            this.isTouched = true;\r\n            this.moveWithTouch(event);\r\n        });\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (event)=>{\r\n            this.moveWithTouch(event);\r\n            \r\n        });\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, (event)=>{\r\n            this.isTouched = false;\r\n        });\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_END, (event)=>{\r\n            this.isTouched = false;\r\n        });\r\n    },\r\n\r\n\r\n    registerReviveAction() {\r\n        this.btn_revive.on(cc.Node.EventType.TOUCH_START, this.handleBtnReviveTouchStart, this);\r\n    },\r\n\r\n    handleBtnReviveTouchStart() {\r\n        cc.audioEngine.stopAll();\r\n        Constants.countDie >= 1 && cc.director.loadScene(\"Game\");\r\n    },\r\n\r\n    moveWithTouch(event){\r\n        this.positionTouch = event.getLocation();\r\n        let localTouchPos = this.node.convertToNodeSpaceAR(this.positionTouch);\r\n        this.positionTouch = localTouchPos;\r\n\r\n        this.positionTouch.x += this.camera.x;\r\n        this.positionTouch.y += this.camera.y;\r\n\r\n        var anglePlayer = cc.misc.radiansToDegrees(Math.atan((this.player.y - localTouchPos.y)/(this.player.x - localTouchPos.x)));\r\n\r\n        this.bodyPlayer.angle = anglePlayer;\r\n\r\n\r\n        if((this.player.x - localTouchPos.x) > 0){\r\n            this.bodyPlayer.scaleX = -1;\r\n        }else{\r\n            this.bodyPlayer.scaleX = 1;\r\n        }\r\n\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        if(Constants.isGameStart && !Constants.isShowPopupOptions) {\r\n            Constants.gameTime += 0.01;\r\n            if(Constants.gameTime >= 3) {\r\n                Constants.isShowPopupOptions = true;\r\n                this.gamePlay.getComponent(\"GamePlay\").showPopupOptions();\r\n            }\r\n        } \r\n    },\r\n});\r\n"]}