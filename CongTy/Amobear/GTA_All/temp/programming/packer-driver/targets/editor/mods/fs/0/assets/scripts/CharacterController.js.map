{"version":3,"sources":["file:///D:/CocosProjects/Amobear/GTA_All/assets/scripts/CharacterController.ts"],"names":["_decorator","AnimationClip","Camera","Collider","Component","find","log","Node","RigidBody","SkeletalAnimation","v3","Vec3","EasyController","EasyControllerEvent","GameInfo","SoundController","ccclass","property","v3_1","characterAnim","CharacterController","start","mainCamera","getComponent","_rigidBody","node","on","MOVEMENT","onMovement","MOVEMENT_STOP","onMovementRelease","_collider","target","otherCollider","selfCollider","onLand","checkTrigger","name","console","isCheckpoint","tutorial3D","active","onDestroy","off","update","deltaTime","enabled","_isMoving","_tmp","set","forward","multiplyScalar","velocity","_velocityScale","add","position","setPosition","_isInTheAir","_curentVerticalVelocity","oldPos","nextY","y","x","z","currentOption","isOnMotobike","isRidingMoto","Instance","playSound","center","play","moto_sit","_curJumpTimes","moveAnimClip","_anim","crossFade","idleAnimClip","degree","offset","cameraRotationY","eulerAngles","setRotationFromEuler","getState","speed","setLinearVelocity","ZERO"],"mappings":"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","sourcesContent":["import { _decorator, AnimationClip, Camera, CapsuleCollider, Collider, Component, find, ICollisionEvent, ITriggerEvent, log, Node, Quat, RigidBody, SkeletalAnimation, tween, Tween, v3, Vec3 } from 'cc';\nimport { EasyController, EasyControllerEvent } from './joystick/EasyController';\nimport { GameInfo } from './CONST/GameInfo';\nimport { SoundController } from './Controller/SoundController';\nconst { ccclass, property } = _decorator;\n\nconst v3_1 = v3();\n\nenum characterAnim {\n    moto_sit = \"Moto_sit\",\n    idle = \"main_idle\",\n}\n\n\n@ccclass('CharacterController')\nexport class CharacterController extends Component {\n    @property(Camera)\n    mainCamera: Camera;\n\n    @property\n    velocity = 1.0;\n\n    @property\n    jumpVelocity = 1.0;\n\n    @property\n    maxJumpTimes: number = 0;\n    private _curJumpTimes: number = 0;\n\n    @property(AnimationClip)\n    idleAnimClip: AnimationClip;\n\n    @property(AnimationClip)\n    moveAnimClip: AnimationClip;\n\n    // Tutorial\n    @property(Node)\n    tutorial3D: Node = null;\n\n\n    _rigidBody: RigidBody = null;\n    _collider: Collider = null;\n    _isMoving: boolean = false;\n    _velocityScale: number = 1.0;\n\n    _isInTheAir: boolean = false;\n    _curentVerticalVelocity: number = 0.0;\n\n    private _anim: SkeletalAnimation;\n    private tweenThen!: Tween<Node>;\n\n    isRidingMoto: boolean = false;\n\n    public isCheckpoint = false;\n\n\n    start() {\n        if (!this.mainCamera) {\n            this.mainCamera = find('Main Camera')?.getComponent(Camera);\n        }\n        this._rigidBody = this.node.getComponent(RigidBody);\n        // this._anim = this.node.getComponent(SkeletalAnimation);\n        // if (this._anim) {\n        //     let clipArr = [\n        //         this.idleAnimClip,\n        //         this.moveAnimClip\n        //     ];\n        //     for (let i = 0; i < clipArr.length; ++i) {\n        //         let clip = clipArr[i];\n        //         if (clip) {\n        //             if (!this._anim.getState(clip.name)) {\n        //                 this._anim.addClip(clip);\n        //             }\n        //         }\n        //     }\n        //     if (this.idleAnimClip) {\n        //         this._anim.play(this.idleAnimClip.name);\n        //     }\n        // }\n\n        EasyController.on(EasyControllerEvent.MOVEMENT, this.onMovement, this);\n        EasyController.on(EasyControllerEvent.MOVEMENT_STOP, this.onMovementRelease, this);\n\n        this._collider = this.getComponent(Collider);\n        this._collider.on('onCollisionEnter', (target: ICollisionEvent) => {\n            if (target.otherCollider != target.selfCollider) {\n                this.onLand();\n            }\n        });\n\n        this.checkTrigger();\n    }\n\n    checkTrigger() {\n        // Trigger\n        this._collider = this.getComponent(Collider);\n        this._collider.on('onTriggerEnter', (target: ITriggerEvent) => {\n            if (target.otherCollider.node.name == 'Checkpoint Collider') {\n                console.log(\"Check point!\");\n                this.isCheckpoint = true;\n\n                // disable tutorial\n                this.tutorial3D.active = false;\n            }\n        });\n    }\n\n    onDestroy() {\n        EasyController.off(EasyControllerEvent.MOVEMENT, this.onMovement, this);\n        EasyController.off(EasyControllerEvent.MOVEMENT_STOP, this.onMovementRelease, this);\n    }\n\n    update(deltaTime: number) {\n        if (this.node.getComponent(RigidBody).enabled == true) {\n            if (this._isMoving) {\n                this._tmp.set(this.node.forward);\n                this._tmp.multiplyScalar(-1.0);\n                this._tmp.multiplyScalar(this.velocity * this._velocityScale);\n\n                this._tmp.multiplyScalar(deltaTime);\n                this._tmp.add(this.node.position);\n                this.node.setPosition(this._tmp);\n            }\n        }\n\n        if (this._isInTheAir) {\n            // if(this.jumpBeginAnimClip && this._anim){\n            //     let state = this._anim.getState(this.jumpBeginAnimClip.name);\n            //     if(state.isPlaying && state.current >= state.duration){\n            //         if(this.jumpLoopAnimClip){\n            //             this._anim.crossFade(this.jumpLoopAnimClip.name);\n            //         }\n            //     }\n            // }\n\n            if (!this._rigidBody) {\n                this._curentVerticalVelocity -= 9.8 * deltaTime;\n\n                let oldPos = this.node.position;\n                let nextY = oldPos.y + this._curentVerticalVelocity * deltaTime;\n                if (nextY <= 0) {\n                    this.onLand();\n                    nextY = 0.0;\n                }\n                this.node.setPosition(oldPos.x, nextY, oldPos.z);\n            }\n        }\n\n        if((GameInfo.currentOption === 8 || GameInfo.currentOption === 9)) {\n            if(GameInfo.isOnMotobike && !this.isRidingMoto) {\n                SoundController.Instance(SoundController).playSound(\"WhistlingSound\");\n                this._collider.center.x = -1.2;\n                this._rigidBody.enabled = false;\n                this._collider.enabled = false;\n                this.isRidingMoto = true;\n                this.getComponent(SkeletalAnimation).play(characterAnim.moto_sit);\n                // this.motobikeCollider.active = true;\n            }\n        }\n  \n    }\n\n    onLand() {\n        this._isInTheAir = false;\n        this._curentVerticalVelocity = 0.0;\n        this._curJumpTimes = 0;\n        if (this.moveAnimClip) {\n            if (this._isMoving) {\n                this._anim.crossFade(this.moveAnimClip.name, 0.5);\n            }\n            else {\n                this._anim.crossFade(this.idleAnimClip.name, 0.5);\n            }\n        }\n    }\n\n    private _tmp = v3();\n    onMovement(degree: number, offset: number) {\n\n        log(\"alo\")\n\n        let cameraRotationY = 0;\n        if (this.mainCamera) {\n            cameraRotationY = this.mainCamera.node.eulerAngles.y;\n        }\n        this._velocityScale = offset;\n\n        this._tmp.set(0, cameraRotationY + degree - 90 + 180, 0);\n        this.node.setRotationFromEuler(this._tmp);\n        if (this._anim) {\n            if (!this._isMoving && !this._isInTheAir) {\n                if (this.moveAnimClip) {\n                    this._anim.crossFade(this.moveAnimClip.name, 0.5);\n                }\n            }\n            if (this.moveAnimClip) {\n                // this._anim.getState(this.moveAnimClip.name).speed = this._velocityScale;\n                this._anim.getState(this.moveAnimClip.name).speed = 1.2;\n            }\n        }\n        this._isMoving = true;\n\n    }\n\n    onMovementRelease() {\n        if (!this._isInTheAir && this.idleAnimClip) {\n            this._anim?.crossFade(this.idleAnimClip.name, 0.5);\n        }\n        this._isMoving = false;\n        if (this._rigidBody) {\n            this._rigidBody.setLinearVelocity(Vec3.ZERO);\n        }\n    }\n}\n\n"]}