{"version":3,"sources":["file:///D:/CocosProjects/Amobear/GTA_All/assets/scripts/Options/PA_09/PA_09_Character.ts"],"names":["_decorator","Collider","Component","Node","RigidBody","Quat","Vec3","tween","easing","Animation","GameInfo","ccclass","property","PA_09_Character","start","rigidbody","getComponent","currentPos","node","getPosition","_collider","on","target","otherCollider","name","console","log","checkPoint_1","active","move","movingCount","setPosition","x","y","z","targetToTurnStep","GTA_PA_08","isHitBrakeBtn","isTouchCheckPointFlag","handleGoToCheckpoint_2","isGotoPoint2Flag","to","eulerAngles","position","checkPoint_2","smooth","handleGoToCheckPoint_3","isGotoPoint3Flag","Camera_4","play","checkPoint_3","call","GTA_PA_09","isCharacterArrivedReWard","setRotationFromEuler","Npc","update","dt","isHitDogeCopsBtn","isHitGetRewardBtn"],"mappings":"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","sourcesContent":["import { _decorator, Collider, Component, Node, ITriggerEvent, RigidBody, Quat,  math, Vec3, log, ICollisionEvent, tween, easing, Animation } from 'cc';\nimport { GameInfo } from '../../CONST/GameInfo';\nimport { SoundController } from '../../Controller/SoundController';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('PA_09_Character')\nexport class PA_09_Character extends Component {\n\n    @property(Node)\n    checkPoint_1: Node = null;\n\n    @property(Node)\n    checkPoint_2: Node = null;\n\n    @property(Node)\n    checkPoint_3: Node = null;\n\n    @property(Node)\n    Camera_4: Node = null;\n\n    @property(Node)\n    Npc: Node = null;\n\n\n    rigidbody: RigidBody = null;\n\n    isCanMove: boolean = false;\n    speed: number = 50;\n    currentPos: Vec3 = null;\n    _collider: Collider = null;\n    movingCount: number = 0;\n\n    targetToTurnStep: number = 136;\n\n\n    targetQuat: Quat = new Quat();\n    currentQuat: Quat = new Quat();\n\n    isGotoPoint2Flag: boolean = false;\n    isGotoPoint3Flag: boolean = false;\n\n\n    protected start(): void {\n        this.rigidbody = this.getComponent(RigidBody);\n        this.currentPos = this.node.getPosition();\n\n        this._collider = this.getComponent(Collider);\n        this._collider.on('onTriggerEnter', (target: ITriggerEvent) => {\n            if (target.otherCollider.node.name == 'Checkpoint Collider_1') {\n                console.log(\"Check point!\");\n                this.checkPoint_1.active = false;\n            }\n        });\n    }\n\n\n    private move(): void {\n        this.movingCount += 1;\n        \n        // this.rigidbody.setLinearVelocity(new Vec3(0, 0, this.speed));\n        this.currentPos = this.node.getPosition();\n        this.node.setPosition(this.currentPos.x, this.currentPos.y, this.currentPos.z + 0.3);\n\n        if(this.movingCount >= this.targetToTurnStep) {\n            GameInfo.GTA_PA_08.isHitBrakeBtn = false;\n            this.checkPoint_1.active = false;\n            GameInfo.GTA_PA_08.isTouchCheckPointFlag = true;\n            // this.handleGoToCheckpoint_2();\n        }\n\n    }\n\n\n    private handleGoToCheckpoint_2(): void {\n        if(this.isGotoPoint2Flag) return;\n\n        this.isGotoPoint2Flag = true;\n\n        tween(this.node)\n        .to(0.8, {eulerAngles: new Vec3(0, -90, 0), position: this.checkPoint_2.position}, {easing: easing.smooth})\n        .start();\n    }\n\n\n    private handleGoToCheckPoint_3(): void {\n        if(this.isGotoPoint3Flag) return;\n\n        this.isGotoPoint3Flag = true;\n\n        this.Camera_4.getComponent(Animation).play();\n\n        tween(this.node)\n        .to(1, {eulerAngles: new Vec3(0, 0, -13), position: this.checkPoint_3.position}, {easing: easing.smooth})\n        .call(() => {\n            GameInfo.GTA_PA_09.isCharacterArrivedReWard = true;\n            this.node.setRotationFromEuler(0,0,0);\n            tween(this.Npc)\n            .to(0.5, {position: this.checkPoint_2.position}, {easing: easing.smooth})\n            .start();\n        })\n        .start();\n    }\n\n\n    protected update(dt: number): void {\n        GameInfo.GTA_PA_08.isHitBrakeBtn && this.move();\n        GameInfo.GTA_PA_08.isHitDogeCopsBtn && this.handleGoToCheckpoint_2();\n        GameInfo.GTA_PA_09.isHitGetRewardBtn && this.handleGoToCheckPoint_3();\n        // this.currentPos = this.node.getPosition();\n        // this.node.setPosition(this.currentPos.x, this.currentPos.y, this.currentPos.z + 0.2);\n        // this.isCanMove = true;\n    }\n}\n\n"]}