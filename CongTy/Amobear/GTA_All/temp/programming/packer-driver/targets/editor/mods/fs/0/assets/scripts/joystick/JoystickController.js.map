{"version":3,"sources":["file:///D:/CocosProjects/Amobear/GTA_All/assets/scripts/joystick/JoystickController.ts"],"names":["_decorator","Component","Node","Vec3","log","EasyControllerEvent","CharacterController","CTA","ccclass","property","JoystickController","start","update","dt","onTouchStart_Movement","event","touches","getTouches","i","length","touch","x","getUILocationX","y","getUILocationY","_movementTouch","halfWidth","_checkerCamera","width","halfHeight","height","_ctrlPointer","setPosition","playAd","onTouchMove_Movement","tutorialUI1","active","tutorialUI4","hasStarted","getID","pos","_ctrlRoot","node","position","ox","oy","len","Math","sqrt","dirX","dirY","radius","degree","atan","PI","_scene","emit","MOVEMENT","onTouchUp_Movement","MOVEMENT_STOP","ZERO","showTutSchedule","endGameSchedule","getDistOfTwoTouchPoints","touchA","_cameraTouchA","touchB","_cameraTouchB","dx","getLocationX","dy","getLocationY","onTouchStart_CameraCtrl","getAllTouches","_distanceOfTwoTouchPoint","onTouchMove_CameraCtrl","touchID","getDelta","rx","_cameraSensitivity","ry","CAMERA_ROTATE","onTouchUp_CameraCtrl","hasTouchA","hasTouchB"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, director, EventTouch, input, Input, Node, Scene, UITransform, Touch, Vec3, BoxCollider, CapsuleCollider, ITriggerEvent, Tween, tween, log } from 'cc';\nimport { EasyController, EasyControllerEvent } from './EasyController';\nimport { CharacterController } from '../CharacterController';\nimport { CTA } from '../CTA';\nconst { ccclass, property } = _decorator;\ndeclare var window;\n\n@ccclass('JoystickController')\nexport class JoystickController extends Component {\n\n    @property(CharacterController)\n    charCtrl: CharacterController = null;\n\n    private _ctrlRoot: UITransform = null;\n    private _ctrlPointer: Node = null;\n    private _checkerCamera: UITransform = null;\n\n    private _cameraSensitivity: number = 0.1;\n    private _distanceOfTwoTouchPoint: number = 0;\n\n    private _movementTouch: Touch = null;\n    private _cameraTouchA: Touch = null;\n    private _cameraTouchB: Touch = null;\n\n    private _scene: Scene = null;\n\n    // Tutorial\n    @property(Node)\n    tutorialUI1: Node = null;\n    @property(Node)\n    tutorialUI4: Node = null;\n    @property(CTA)\n    cta: CTA = null;\n    @property(Node)\n    tutorial3D: Node = null;\n\n    hasStarted = false;\n    isScheduled = false;\n    playAd = false;\n\n\n    start() {\n        // let checkerCamera = this.node.getChildByName('camera_checker').getComponent(UITransform);\n        // checkerCamera.node.on(Input.EventType.TOUCH_START, this.onTouchStart_CameraCtrl, this);\n        // checkerCamera.node.on(Input.EventType.TOUCH_MOVE, this.onTouchMove_CameraCtrl, this);\n        // checkerCamera.node.on(Input.EventType.TOUCH_END, this.onTouchUp_CameraCtrl, this);\n        // checkerCamera.node.on(Input.EventType.TOUCH_CANCEL, this.onTouchUp_CameraCtrl, this);\n\n        // let checkerMovement = this.node.getChildByName('movement_checker').getComponent(UITransform);\n        // checkerMovement.node.on(Input.EventType.TOUCH_START, this.onTouchStart_Movement, this);\n        // checkerMovement.node.on(Input.EventType.TOUCH_MOVE, this.onTouchMove_Movement, this);\n        // checkerMovement.node.on(Input.EventType.TOUCH_END, this.onTouchUp_Movement, this);\n        // checkerMovement.node.on(Input.EventType.TOUCH_CANCEL, this.onTouchUp_Movement, this);\n\n\n        // this._checkerCamera = checkerCamera;\n\n        // this._ctrlRoot = this.node.getChildByName('ctrl').getComponent(UITransform);\n        // this._ctrlRoot.node.active = true;\n        // this._ctrlPointer = this._ctrlRoot.node.getChildByName('pointer');\n\n        // this._scene = director.getScene();\n    }\n\n    update(dt: number) {\n        // if (this.hasStarted == true && this.charCtrl.isCheckpoint == false) {\n        //     this.unschedule(this.showTutSchedule);\n        // } else if (this.hasStarted == false && this.charCtrl.isCheckpoint == false && this.tutorialUI1.active == false) {\n        //     this.scheduleOnce(this.showTutSchedule, 3);\n        // }\n\n        // if (this.playAd == true && this.tutorial3D.active == true) {\n        //     this.scheduleOnce(this.endGameSchedule, 10);\n        // }\n        // else if (this.playAd == true && this.tutorial3D.active == false) {\n        //     this.unschedule(this.endGameSchedule);\n        // }\n    }\n\n    /****\n     * ----------------------------------------------\n     *                                              |\n     *                                              |\n     *            1.Character Movement              |\n     *                                              |\n     *                                              |\n     * ----------------------------------------------\n     ****/\n    onTouchStart_Movement(event: EventTouch) {\n        let touches = event.getTouches();\n\n        log(\"alo\")\n\n        for (let i = 0; i < touches.length; ++i) {\n            let touch = touches[i];\n            let x = touch.getUILocationX();\n            let y = touch.getUILocationY();\n            if (!this._movementTouch) {\n                //we sub halfWidth,halfHeight here.\n                //because, the touch event use left bottom as zero point(0,0), ui node use the center of screen as zero point(0,0)\n                //this._ctrlRoot.setPosition(x - halfWidth, y - halfHeight, 0);\n\n                let halfWidth = this._checkerCamera.width / 2;\n                let halfHeight = this._checkerCamera.height / 2;\n\n                // this._ctrlRoot.node.active = true;\n                // this._ctrlRoot.node.setPosition(x - halfWidth, y - halfHeight, 0);\n                this._ctrlPointer.setPosition(0, 0, 0);\n                this._movementTouch = touch;\n            }\n        }\n\n        this.playAd = true;\n    }\n\n    onTouchMove_Movement(event: EventTouch) {\n        // tutorial\n        this.tutorialUI1.active = false;\n        this.tutorialUI4.active = false;\n        this.hasStarted = true;\n\n        let touches = event.getTouches();\n        for (let i = 0; i < touches.length; ++i) {\n            let touch = touches[i];\n            if (this._movementTouch && touch.getID() == this._movementTouch.getID()) {\n                let halfWidth = this._checkerCamera.width / 2;\n                let halfHeight = this._checkerCamera.height / 2;\n                let x = touch.getUILocationX();\n                let y = touch.getUILocationY();\n\n                let pos = this._ctrlRoot.node.position;\n                let ox = x - halfWidth - pos.x;\n                let oy = y - halfHeight - pos.y;\n\n                let len = Math.sqrt(ox * ox + oy * oy);\n                if (len <= 0) {\n                    return;\n                }\n\n                let dirX = ox / len;\n                let dirY = oy / len;\n                let radius = this._ctrlRoot.width / 2;\n                if (len > radius) {\n                    len = radius;\n                    ox = dirX * radius;\n                    oy = dirY * radius;\n                }\n\n                this._ctrlPointer.setPosition(ox, oy, 0);\n\n                // degree 0 ~ 360 based on x axis.\n                let degree = Math.atan(dirY / dirX) / Math.PI * 180;\n                if (dirX < 0) {\n                    degree += 180;\n                }\n                else {\n                    degree += 360;\n                }\n\n                this._scene.emit(EasyControllerEvent.MOVEMENT, degree, len / radius);\n            }\n        }\n    }\n\n    onTouchUp_Movement(event: EventTouch) {\n        // check tut callback\n        this.hasStarted = false;\n\n        log(\"Check\")\n\n        let touches = event.getTouches();\n        for (let i = 0; i < touches.length; ++i) {\n            let touch = touches[i];\n            if (this._movementTouch && touch.getID() == this._movementTouch.getID()) {\n                this._scene.emit(EasyControllerEvent.MOVEMENT_STOP);\n                this._movementTouch = null;\n                // this._ctrlRoot.node.active = true;\n                this._ctrlPointer.setPosition(Vec3.ZERO);\n            }\n        }\n    }\n\n    showTutSchedule() {\n        this.tutorialUI1.active = true;\n        this.tutorialUI4.active = true;\n    }\n\n    endGameSchedule() {\n        // if (this.cta.node.active == false)\n            // this.cta.node.active = true;\n\n        // this.cta.onTouchStart();\n        // window.gameEnd && window.gameEnd();\n    }\n\n    /****\n     * ----------------------------------------------\n     *                                              |\n     *                                              |\n     *            2.Camera Rotation Zone            |\n     *                                              |\n     *                                              |\n     * ----------------------------------------------\n     ****/\n    private getDistOfTwoTouchPoints(): number {\n        let touchA = this._cameraTouchA;\n        let touchB = this._cameraTouchB;\n        if (!touchA || !touchB) {\n            return 0;\n        }\n        let dx = touchA.getLocationX() - touchB.getLocationX();\n        let dy = touchB.getLocationY() - touchB.getLocationY();\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    private onTouchStart_CameraCtrl(event: EventTouch) {\n        let touches = event.getAllTouches();\n        this._cameraTouchA = null;\n        this._cameraTouchB = null;\n        for (let i = touches.length - 1; i >= 0; i--) {\n            let touch = touches[i];\n            if (this._movementTouch && touch.getID() == this._movementTouch.getID()) {\n                continue;\n            }\n            if (this._cameraTouchA == null) {\n                this._cameraTouchA = touches[i];\n            }\n            else if (this._cameraTouchB == null) {\n                this._cameraTouchB = touches[i];\n                break;\n            }\n        }\n        this._distanceOfTwoTouchPoint = this.getDistOfTwoTouchPoints();\n    }\n\n    private onTouchMove_CameraCtrl(event: EventTouch) {\n        let touches = event.getTouches();\n        for (let i = 0; i < touches.length; ++i) {\n            let touch = touches[i];\n            let touchID = touch.getID();\n\n            //only one touch, do camera rotate.\n            if (this._cameraTouchA && touchID == this._cameraTouchA.getID()) {\n                let dt = touch.getDelta();\n                let rx = dt.y * this._cameraSensitivity;\n                let ry = -dt.x * this._cameraSensitivity;\n                this._scene.emit(EasyControllerEvent.CAMERA_ROTATE, rx, ry);\n            }\n        }\n    }\n\n    private onTouchUp_CameraCtrl(event: EventTouch) {\n        let touches = event.getAllTouches();\n        let hasTouchA = false;\n        let hasTouchB = false;\n        for (let i = 0; i < touches.length; ++i) {\n            let touch = touches[i];\n            let touchID = touch.getID();\n            if (this._cameraTouchA && touchID == this._cameraTouchA.getID()) {\n                hasTouchA = true;\n            }\n            else if (this._cameraTouchB && touchID == this._cameraTouchB.getID()) {\n                hasTouchB = true;\n            }\n        }\n\n        if (!hasTouchA) {\n            this._cameraTouchA = null;\n        }\n        if (!hasTouchB) {\n            this._cameraTouchB = null;\n        }\n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}