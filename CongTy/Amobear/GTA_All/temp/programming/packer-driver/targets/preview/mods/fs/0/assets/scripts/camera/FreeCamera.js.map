{"version":3,"sources":["file:///D:/CocosProjects/Amobear/GTA_All/assets/scripts/camera/FreeCamera.ts"],"names":["_decorator","Component","game","Input","input","Quat","Vec2","Vec3","ccclass","property","v2_1","v2_2","v3_1","qt_1","forward","right","FreeCamera","slide","range","onLoad","on","EventType","MOUSE_WHEEL","onMouseWheel","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","copy","_euler","node","eulerAngles","_position","getPosition","_eulerP","onDestroy","off","update","dt","t","Math","min","damp","transformQuat","_velocity","rotation","scaleAndAdd","moveSpeed","_speedScale","lerp","setPosition","moveDir","lengthSqr","FORWARD","normalize","cross","UP","z","x","y","fromEuler","slerp","setWorldRotationFromEuler","e","delta","getScrollY","UNIT_Z","position","canvas","requestPointerLock","getStartLocation","width","getDelta","rotateSpeed","document","exitPointerLock"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventMouse, EventTouch, game, Input, input, Node, Quat, Vec2, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\nconst v2_1 = new Vec2();\nconst v2_2 = new Vec2();\nconst v3_1 = new Vec3();\nconst qt_1 = new Quat();\nconst forward = new Vec3();\nconst right = new Vec3();\n\n\n@ccclass('FreeCamera')\nexport class FreeCamera extends Component {\n    @property\n    public moveSpeed = 1;\n\n    @property\n    public moveSpeedShiftScale = 5;\n\n    @property({ slide: true, range: [0.05, 0.5, 0.01] })\n    public damp = 0.2;\n\n    @property\n    public rotateSpeed = 1;\n\n    private _euler = new Vec3();\n    private _velocity = new Vec3();\n    private _position = new Vec3();\n    private _speedScale = 1;\n    private _eulerP = new Vec3();\n\n    public onLoad() {\n        input.on(Input.EventType.MOUSE_WHEEL, this.onMouseWheel, this);\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        Vec3.copy(this._euler, this.node.eulerAngles);\n        Vec3.copy(this._position, this.node.getPosition());\n        Vec3.copy(this._eulerP, this.node.eulerAngles);\n\n        // input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n        // input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\n    }\n\n    public onDestroy() {\n        input.off(Input.EventType.MOUSE_WHEEL, this.onMouseWheel, this);\n        input.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        input.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        input.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n\n        // input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n        // input.off(Input.EventType.KEY_UP, this.onKeyUp, this);\n    }\n\n\n    public update(dt: number) {\n        const t = Math.min(dt / this.damp, 1);\n        // position\n        Vec3.transformQuat(v3_1, this._velocity, this.node.rotation);\n        Vec3.scaleAndAdd(this._position, this._position, v3_1, this.moveSpeed * this._speedScale);\n        Vec3.lerp(v3_1, this.node.getPosition(), this._position, t);\n        this.node.setPosition(v3_1);\n\n        if (this.moveDir.lengthSqr()) {\n            Vec3.transformQuat(forward, Vec3.FORWARD, this.node.rotation);\n            forward.normalize();\n            Vec3.cross(right, forward, Vec3.UP);\n            right.normalize();\n\n            Vec3.scaleAndAdd(this._position, this._position, forward, this.moveSpeed * this._speedScale * this.moveDir.z);\n            Vec3.lerp(v3_1, this.node.getPosition(), this._position, t);\n            this.node.setPosition(v3_1);\n\n            Vec3.scaleAndAdd(this._position, this._position, right, this.moveSpeed * this._speedScale * this.moveDir.x);\n            Vec3.lerp(v3_1, this.node.getPosition(), this._position, t);\n            this.node.setPosition(v3_1);\n\n            Vec3.scaleAndAdd(this._position, this._position, Vec3.UP, this.moveSpeed * this._speedScale * this.moveDir.y);\n            Vec3.lerp(v3_1, this.node.getPosition(), this._position, t);\n            this.node.setPosition(v3_1);\n        }\n\n        // rotation\n        Quat.fromEuler(qt_1, this._eulerP.x, this._eulerP.y, this._eulerP.z);\n        Quat.slerp(qt_1, this.node.rotation, qt_1, t);\n        this.node.setWorldRotationFromEuler(this._eulerP.x, this._eulerP.y, this._eulerP.z);\n    }\n\n    public onMouseWheel(e: EventMouse) {\n        const delta = -e.getScrollY() * this.moveSpeed * 0.1; // delta is positive when scroll down\n        Vec3.transformQuat(v3_1, Vec3.UNIT_Z, this.node.rotation);\n        Vec3.scaleAndAdd(this._position, this.node.position, v3_1, delta);\n    }\n\n    public onTouchStart(e: EventTouch) {\n        if (game.canvas.requestPointerLock) { game.canvas.requestPointerLock(); }\n    }\n\n    public onTouchMove(e: EventTouch) {\n        e.getStartLocation(v2_1);\n        if (v2_1.x > game.canvas.width * 0.4) { // rotation\n            e.getDelta(v2_2);\n            this._eulerP.y -= v2_2.x * this.rotateSpeed * 0.1;\n            this._eulerP.x += v2_2.y * this.rotateSpeed * 0.1;\n        } else { // position\n            e.getDelta(v2_2);\n            this._eulerP.y -= v2_2.x * this.rotateSpeed * 0.1;\n            this._eulerP.x += v2_2.y * this.rotateSpeed * 0.1;\n        }\n    }\n\n    public onTouchEnd(e: EventTouch) {\n        if (document.exitPointerLock) { document.exitPointerLock(); }\n        e.getStartLocation(v2_1);\n        if (v2_1.x < game.canvas.width * 0.4) { // position\n            this._velocity.x = 0;\n            this._velocity.z = 0;\n        }\n    }\n\n    private keys = [];\n    // x  -1 left, +1 right   y -1 backword, +1 forward\n    private moveDir: Vec3 = new Vec3();\n    // onKeyDown(event: EventKeyboard) {\n    //     let keyCode = event.keyCode;\n    //     if (keyCode == KeyCode.KEY_A || keyCode == KeyCode.KEY_S || keyCode == KeyCode.KEY_D || keyCode == KeyCode.KEY_W) {\n    //         if (this.keys.indexOf(keyCode) == -1) {\n    //             this.keys.push(keyCode);\n    //             this.updateDirection();\n    //         }\n    //     }\n    //     if (keyCode == KeyCode.KEY_Q) {\n    //         this.moveDir.y = -1;\n    //     }\n    //     else if (keyCode == KeyCode.KEY_E) {\n    //         this.moveDir.y = 1;\n    //     }\n    // }\n\n    // onKeyUp(event: EventKeyboard) {\n    //     let keyCode = event.keyCode;\n    //     if (keyCode == KeyCode.KEY_A || keyCode == KeyCode.KEY_S || keyCode == KeyCode.KEY_D || keyCode == KeyCode.KEY_W) {\n    //         let index = this.keys.indexOf(keyCode);\n    //         if (index != -1) {\n    //             this.keys.splice(index, 1);\n    //             this.updateDirection();\n    //         }\n    //     }\n\n    //     if (keyCode == KeyCode.KEY_Q || keyCode == KeyCode.KEY_E) {\n    //         this.moveDir.y = 0;\n    //     }\n    // }\n\n    // private key2dirMap = null;\n\n    // updateDirection() {\n    //     if (this.key2dirMap == null) {\n    //         this.key2dirMap = {};\n    //         this.key2dirMap[0] = v2(0, 0);\n    //         this.key2dirMap[KeyCode.KEY_A] = v2(-1, 0);\n    //         this.key2dirMap[KeyCode.KEY_D] = v2(1, 0);\n    //         this.key2dirMap[KeyCode.KEY_W] = v2(0, 1);\n    //         this.key2dirMap[KeyCode.KEY_S] = v2(0, -1);\n\n    //         this.key2dirMap[KeyCode.KEY_A * 1000 + KeyCode.KEY_W] = this.key2dirMap[KeyCode.KEY_W * 1000 + KeyCode.KEY_A] = v2(-1, 1);\n    //         this.key2dirMap[KeyCode.KEY_D * 1000 + KeyCode.KEY_W] = this.key2dirMap[KeyCode.KEY_W * 1000 + KeyCode.KEY_D] = v2(1, 1);\n    //         this.key2dirMap[KeyCode.KEY_A * 1000 + KeyCode.KEY_S] = this.key2dirMap[KeyCode.KEY_S * 1000 + KeyCode.KEY_A] = v2(-1, -1);\n    //         this.key2dirMap[KeyCode.KEY_D * 1000 + KeyCode.KEY_S] = this.key2dirMap[KeyCode.KEY_S * 1000 + KeyCode.KEY_D] = v2(1, -1);\n\n    //         this.key2dirMap[KeyCode.KEY_A * 1000 + KeyCode.KEY_D] = this.key2dirMap[KeyCode.KEY_D];\n    //         this.key2dirMap[KeyCode.KEY_D * 1000 + KeyCode.KEY_A] = this.key2dirMap[KeyCode.KEY_A];\n    //         this.key2dirMap[KeyCode.KEY_W * 1000 + KeyCode.KEY_S] = this.key2dirMap[KeyCode.KEY_S];\n    //         this.key2dirMap[KeyCode.KEY_S * 1000 + KeyCode.KEY_W] = this.key2dirMap[KeyCode.KEY_W];\n    //     }\n    //     let keyCode0 = this.keys[this.keys.length - 1] || 0;\n    //     let keyCode1 = this.keys[this.keys.length - 2] || 0;\n    //     let dir = this.key2dirMap[keyCode1 * 1000 + keyCode0];\n    //     this.moveDir.x = dir.x;\n    //     this.moveDir.z = dir.y;\n    // }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}