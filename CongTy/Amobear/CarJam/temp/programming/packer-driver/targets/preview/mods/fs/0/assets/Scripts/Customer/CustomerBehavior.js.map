{"version":3,"sources":["file:///D:/CocosProjects/Amobear/CarJam/assets/Scripts/Customer/CustomerBehavior.ts"],"names":["_decorator","Component","easing","Node","SkeletalAnimation","tween","Vec3","GameInfo","ccclass","property","CustomerBehavior","start","CustomerColors","customerColorID","active","moveToGoal","getComponent","play","carSkin","carStops","goalPoint","actuallySeat","CarSeats","node","destroy","to","position","goalPos","eulerAngles","eulerAngle","smooth","call","activeCustomerSeat","currentCarSeat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAmBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,iB,OAAAA,iB;AAAmBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AAC1EC,MAAAA,Q,iBAAAA,Q;;;;;;;OAIH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;kCAIjBU,gB,WADZF,OAAO,CAAC,kBAAD,C,UAYHC,QAAQ,CAAC,CAACN,IAAD,CAAD,C,oCAZb,MACaO,gBADb,SACsCT,SADtC,CACgD;AAAA;AAAA;;AAAA,8CAEvB,IAFuB;;AAAA,mDAGlB,IAHkB;;AAAA,6CAKxB,IALwB;;AAAA,6CAMvB,KANuB;;AAAA,2CAO5B,IAP4B;;AAAA,8CASvB,CATuB;;AAAA;AAAA;;AAelCU,QAAAA,KAAK,GAAS;AACpB,eAAKC,cAAL,CAAoB,KAAKC,eAAzB,EAA0CC,MAA1C,GAAmD,IAAnD;AACH;;AAGMC,QAAAA,UAAU,GAAS;AACtB,eAAKC,YAAL,CAAkBZ,iBAAlB,EAAqCa,IAArC,CAA0C,KAA1C,EADsB,CAGtB;;AACA,cAAIC,OAAO,GAAG;AAAA;AAAA,oCAASC,QAAT,CAAkB,KAAKC,SAAvB,EAAkCF,OAAhD;AACAA,UAAAA,OAAO,CAACG,YAAR,IAAwB,CAAxB;;AAEA,cAAGH,OAAO,CAACG,YAAR,GAAuBH,OAAO,CAACI,QAAlC,EAA4C;AACxC,iBAAKC,IAAL,CAAUT,MAAV,GAAmB,KAAnB;AACA,iBAAKU,OAAL;AACA;AACH;;AAEDnB,UAAAA,KAAK,CAAC,KAAKkB,IAAN,CAAL,CACCE,EADD,CACI,GADJ,EACS;AAACC,YAAAA,QAAQ,EAAE,KAAKC,OAAhB;AAAyBC,YAAAA,WAAW,EAAE,IAAItB,IAAJ,CAAS,CAAT,EAAY,KAAKuB,UAAjB,EAA6B,CAA7B;AAAtC,WADT,EACiF;AAAC3B,YAAAA,MAAM,EAAEA,MAAM,CAAC4B;AAAhB,WADjF,EAECC,IAFD,CAEM,MAAM;AAERb,YAAAA,OAAO,CAACc,kBAAR,CAA2Bd,OAAO,CAACe,cAAnC;AACAf,YAAAA,OAAO,CAACe,cAAR,IAA0B,CAA1B;AAEA,iBAAKV,IAAL,CAAUT,MAAV,GAAmB,KAAnB;AACA,iBAAKU,OAAL;AACH,WATD,EAUCb,KAVD;AAWH;;AA5C2C,O;;;;;iBAYnB,E","sourcesContent":["import { _decorator, Component, easing, log, math, Node, SkeletalAnimation, tween, Vec3 } from 'cc';\nimport { GameInfo } from '../Const/GameInfo';\nimport { CarBehavior } from '../Car/CarBehavior';\nimport { SoundController } from '../Controller/SoundController';\nimport { CONST } from '../Const/CONST';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('CustomerBehavior')\nexport class CustomerBehavior extends Component {\n\n    customerID: number = null;\n    customerColorID: number = null;\n\n    goalPoint: number = null;\n    isCanMove: boolean = false;\n    goalPos: Vec3 = null;\n\n    eulerAngle: number = 0;\n\n    @property([Node])\n    CustomerColors: Node[] = [];\n\n\n    protected start(): void {\n        this.CustomerColors[this.customerColorID].active = true;\n    }\n\n\n    public moveToGoal(): void {\n        this.getComponent(SkeletalAnimation).play(\"run\");\n\n        // this.node.setRotationFromEuler(new math.Vec3(0, this.eulerAngle, 0))\n        let carSkin = GameInfo.carStops[this.goalPoint].carSkin;\n        carSkin.actuallySeat += 1;\n\n        if(carSkin.actuallySeat > carSkin.CarSeats) {\n            this.node.active = false;\n            this.destroy();\n            return;\n        }\n\n        tween(this.node)\n        .to(0.3, {position: this.goalPos, eulerAngles: new Vec3(0, this.eulerAngle, 0)}, {easing: easing.smooth})\n        .call(() => {\n\n            carSkin.activeCustomerSeat(carSkin.currentCarSeat);\n            carSkin.currentCarSeat += 1;\n\n            this.node.active = false;\n            this.destroy();\n        })\n        .start();\n    } \n}\n"]}