{"version":3,"sources":["file:///D:/CocosProjects/Amobear/CarJam/assets/Scripts/Car/CarHidden.ts"],"names":["_decorator","Component","easing","tween","Vec3","CarBehavior","GameInfo","CarSkin","SoundController","CONST","ccclass","property","CarHidden","start","bounceAnim","currentScale","node","getScale","newScale","x","y","z","to","scale","smooth","transformRandomCarColor","isTransformed","Instance","PlaySound","SoundTrack","unlockHiddenCarSound","colorCarArr","getCarColorArr","carColor","getRandomString","carSkinComp","getComponent","CarColor","setCarProperties","getChildByName","active","carColorNode","car_Top","strings","currentOption","array","randomIndex","Math","floor","random","length","update","dt","blockedCars","every","car","stopID"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, easing, log, Node, tween, Vec3 } from 'cc';\nimport { CarBehavior } from './CarBehavior';\nimport { GameInfo } from '../Const/GameInfo';\nimport { CarSkin } from './CarSkin';\nimport { SoundController } from '../Controller/SoundController';\nimport { CONST } from '../Const/CONST';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('CarHidden')\nexport class CarHidden extends Component {\n\n    @property([CarBehavior])\n    blockedCars: CarBehavior[] = [];\n\n    isTransformed: boolean = false;\n\n\n    protected start(): void {\n\n    }\n\n\n    private bounceAnim(): void {\n        let currentScale: Vec3 = this.node.getScale(),\n            newScale: Vec3 = new Vec3(currentScale.x + 0.1, currentScale.y + 0.1, currentScale.z + 0.1);\n        tween(this.node)\n            .to(0.1, { scale: newScale }, { easing: easing.smooth })\n            .to(0.1, { scale: currentScale }, { easing: easing.smooth })\n            .start();\n    }\n\n\n    private transformRandomCarColor(): void {\n        this.isTransformed = true;\n\n        SoundController.Instance(SoundController).PlaySound(CONST.SoundTrack.unlockHiddenCarSound)\n\n        this.bounceAnim();\n\n        const colorCarArr = this.getCarColorArr();\n\n        let carColor = this.getRandomString(colorCarArr);\n\n        const carSkinComp = this.getComponent(CarSkin);\n\n        carSkinComp.CarColor = carColor;\n\n        carSkinComp.setCarProperties();\n\n        // hide Black Hidden Color\n        this.node.getChildByName(\"base\").getChildByName(\"Black\").active = false;\n\n        const carColorNode = this.node.getChildByName(\"base\").getChildByName(carColor);\n        carColorNode.active = true;\n        carSkinComp.car_Top = carColorNode.getChildByName(\"Top\");\n    }\n\n\n    private getCarColorArr(): string[] {\n        let strings: string[] = [];\n\n        switch (GameInfo.currentOption) {\n            case 7:\n                strings = [\"Blue\", \"Green\", \"Orange\", \"Pink\", \"Purple\", \"Red\", \"Yellow\", \"Blue_light\"];\n                break;\n            case 8:\n                strings = [\"Blue\", \"Green\", \"Orange\", \"Red\", \"Blue_light\"];\n                break;\n            default:\n                break;\n        }\n\n        return strings;\n    }\n\n\n    private getRandomString(array: string[]): string {\n        // if (!Array.isArray(array) || array.length === 0) {\n        //     throw new Error(\"Input must be a non-empty array.\");\n        // }\n        const randomIndex = Math.floor(Math.random() * array.length);\n        return array[randomIndex];\n    }\n\n\n    protected update(dt: number): void {\n        if (this.blockedCars.every(car => car.stopID) && !this.isTransformed) this.transformRandomCarColor();\n    }\n\n}\n\n"]}