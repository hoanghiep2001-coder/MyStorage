{"version":3,"sources":["assets\\src\\snake\\SnakePiece.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { PIECE_TYPE, DIRECTION } from \"./SnakeConstants\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class Piece extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    private sprite: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    private picFood: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    private picSnakeHeadRight: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    private picSnakeBodyH: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    private picSnakeJointRight: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    private picSnakeTailUp: cc.SpriteFrame = null;\r\n\r\n    public x = 0;\r\n    public y = 0;\r\n    \r\n    private _type: PIECE_TYPE;\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    set type(value: PIECE_TYPE) {\r\n        this._type = value;\r\n        this.render();\r\n    }\r\n\r\n    private _inDir: DIRECTION = DIRECTION.RIGHT;\r\n    get inDir() {\r\n        return this._inDir;\r\n    }\r\n    set inDir(value: DIRECTION) {\r\n        this._inDir = value;\r\n        this.render();\r\n    }\r\n\r\n    private _outDir: DIRECTION = DIRECTION.RIGHT;\r\n    get outDir() {\r\n        return this._outDir;\r\n    }\r\n    set outDir(value: DIRECTION) {\r\n        this._outDir = value;\r\n        this.render();\r\n    }\r\n\r\n    public init(type: PIECE_TYPE, outDir = DIRECTION.RIGHT, inDir = DIRECTION.RIGHT) {\r\n        this._type = type;\r\n        this._inDir = inDir;\r\n        this._outDir = outDir;\r\n        this.render();\r\n    }\r\n\r\n    private render() {\r\n        switch(this.type) {\r\n            case PIECE_TYPE.BLANK:\r\n                this.sprite.spriteFrame = null;\r\n                this.rotateOther();\r\n                break;\r\n            case PIECE_TYPE.FOOD:\r\n                this.sprite.spriteFrame = this.picFood;\r\n                this.rotateOther();\r\n                break;\r\n            case PIECE_TYPE.SNAKE_HEAD:\r\n                this.sprite.spriteFrame = this.picSnakeHeadRight;\r\n                this.rotateHeadByDir(this.outDir);\r\n                break;\r\n            case PIECE_TYPE.SNAKE_BODY:\r\n                if (this.inDir === this.outDir) {\r\n                    this.sprite.spriteFrame = this.picSnakeBodyH;\r\n                    this.rotateBodyByDir(this.outDir);\r\n                } else {\r\n                    this.sprite.spriteFrame = this.picSnakeJointRight;\r\n                    this.rotateJointByDir(this.inDir, this.outDir);\r\n                }\r\n                break;\r\n            case PIECE_TYPE.SNAKE_TAIL:\r\n                this.sprite.spriteFrame = this.picSnakeTailUp;\r\n                this.rotateTailByDir(this.outDir);\r\n                break;\r\n            default:\r\n                cc.error(\"wrong piece type!\");\r\n        }\r\n    }\r\n\r\n    private rotateHeadByDir(dir: DIRECTION){\r\n        switch(dir) {\r\n            case DIRECTION.RIGHT:\r\n                this.node.rotation = 0;\r\n                break;\r\n            case DIRECTION.DOWN:\r\n                this.node.rotation = 90;\r\n                break;\r\n            case DIRECTION.LEFT:\r\n                this.node.rotation = 180;\r\n                break;\r\n            case DIRECTION.UP:\r\n                this.node.rotation = 270;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private rotateBodyByDir(dir: DIRECTION) {\r\n        switch(dir) {\r\n            case DIRECTION.RIGHT:\r\n                this.node.rotation = 0;\r\n                break;\r\n            case DIRECTION.LEFT:\r\n                this.node.rotation = 180;\r\n                break;\r\n            case DIRECTION.DOWN:\r\n                this.node.rotation = 90;\r\n            case DIRECTION.UP:\r\n                this.node.rotation = 270;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private rotateJointByDir(inDir: DIRECTION, outDir: DIRECTION) {\r\n        if(inDir === DIRECTION.UP && outDir === DIRECTION.RIGHT || inDir === DIRECTION.LEFT && outDir === DIRECTION.DOWN) {\r\n            this.node.rotation = 0;\r\n        } else if(inDir === DIRECTION.RIGHT && outDir === DIRECTION.DOWN || inDir === DIRECTION.UP && outDir === DIRECTION.LEFT) {\r\n            this.node.rotation = 90;\r\n        } else if(inDir === DIRECTION.RIGHT && outDir === DIRECTION.UP || inDir === DIRECTION.DOWN && outDir === DIRECTION.LEFT) {\r\n            this.node.rotation = 180;\r\n        } else if(inDir === DIRECTION.DOWN && outDir === DIRECTION.RIGHT || inDir === DIRECTION.LEFT && outDir === DIRECTION.UP) {\r\n            this.node.rotation = 270;\r\n        }\r\n    }\r\n\r\n    private rotateTailByDir(dir: DIRECTION) {\r\n        switch(dir) {\r\n            case DIRECTION.UP:\r\n                this.node.rotation = 0;\r\n                break;\r\n            case DIRECTION.RIGHT:\r\n                this.node.rotation = 90;\r\n                break;\r\n            case DIRECTION.DOWN:\r\n                this.node.rotation = 180;\r\n                break;\r\n            case DIRECTION.LEFT:\r\n                this.node.rotation = 270;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private rotateOther() {\r\n        this.node.rotation = 0;\r\n    }\r\n}"]}