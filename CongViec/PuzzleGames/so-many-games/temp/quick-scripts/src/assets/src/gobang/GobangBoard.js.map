{"version":3,"sources":["assets\\src\\gobang\\GobangBoard.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GobangScene } from \"./GobangScene\";\r\nimport { NONE, BLACK, WHITE } from \"./GobangConstants\";\r\nimport { GobangPiece } from \"./GobangPiece\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class GobangBoard extends cc.Component {\r\n\r\n    @property(cc.Integer)\r\n    private colsSum: number = 15;\r\n    @property(cc.Integer)\r\n    private rowsSum: number = 15;\r\n    @property(cc.Graphics)\r\n    private graphics: cc.Graphics = null; // 用来画棋盘棋子\r\n    @property(cc.Graphics)\r\n    private graphics2: cc.Graphics = null; // 用来画上层UI\r\n\r\n    private tileWidth: number = 0; // 一个方块的宽度\r\n    private startX: number = 0; // 棋盘左下角\r\n    private startY: number = 0;\r\n    private boardWidth: number = 0; // 棋盘节点宽高\r\n    private boardHeight: number = 0;\r\n    public pieceMap: Array<Array<GobangPiece>>;\r\n    public lastPiece: GobangPiece = null;\r\n\r\n    private gobangScene: GobangScene = null;\r\n\r\n    public init(gobangScene: GobangScene) {\r\n        this.gobangScene = gobangScene;\r\n\r\n        this.tileWidth = this.node.width / this.colsSum;\r\n        this.startX = this.tileWidth / 2;\r\n        this.startY = this.tileWidth / 2;\r\n        this.boardWidth = this.tileWidth * (this.colsSum - 1);\r\n        this.boardHeight = this.tileWidth * (this.rowsSum - 1);\r\n        this.reset();\r\n\r\n        this.addListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this.graphics.clear();\r\n        this.graphics2.clear();\r\n        // 画棋盘\r\n        this.graphics.strokeColor = cc.Color.BLACK;\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            this.graphics.moveTo(this.startX + x * this.tileWidth, this.startY);\r\n            this.graphics.lineTo(this.startX + x * this.tileWidth, this.startY + this.boardHeight);\r\n            this.graphics.stroke();\r\n        }\r\n        for (let y = 0; y < this.rowsSum; y++) {\r\n            this.graphics.moveTo(this.startX, this.startY + y * this.tileWidth);\r\n            this.graphics.lineTo(this.startX + this.boardWidth, this.startY + y * this.tileWidth);\r\n            this.graphics.stroke();\r\n        }\r\n        // 中心点\r\n        this.graphics.strokeColor = cc.Color.RED;\r\n        this.graphics.fillColor = cc.Color.RED;\r\n        let centerCol = Math.floor(this.colsSum / 2);\r\n        let centerRow = Math.floor(this.rowsSum / 2);\r\n        this.graphics.circle(this.startX + centerCol * this.tileWidth, this.startY + centerRow * this.tileWidth, 5);\r\n        this.graphics.fill();\r\n\r\n        this.pieceMap = [];\r\n        for (let y = 0; y < this.rowsSum; y++) {\r\n            this.pieceMap[y] = [];\r\n            for (let x = 0; x < this.colsSum; x++) {\r\n                this.pieceMap[y][x] = new GobangPiece(x, y, NONE);\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawLastPieceRect() {\r\n        this.graphics2.clear();\r\n        if (this.lastPiece) {\r\n            this.graphics2.strokeColor = cc.Color.RED;\r\n            this.graphics2.rect(this.startX + this.tileWidth * this.lastPiece.x - this.tileWidth / 2,\r\n                this.startY + this.tileWidth * this.lastPiece.y - this.tileWidth / 2,\r\n                this.tileWidth, this.tileWidth);\r\n            this.graphics2.stroke();\r\n        }\r\n    }\r\n\r\n    public placeBlack(coor: cc.Vec2) {\r\n        this.graphics.strokeColor = cc.Color.BLACK;\r\n        this.graphics.fillColor = cc.Color.BLACK;\r\n        this.graphics.circle(this.startX + coor.x * this.tileWidth, this.startY + coor.y * this.tileWidth, this.tileWidth * 0.45);\r\n        this.graphics.fill();\r\n        this.pieceMap[coor.x][coor.y] = new GobangPiece(coor.x, coor.y, BLACK);\r\n        this.lastPiece = this.pieceMap[coor.x][coor.y];\r\n        this.drawLastPieceRect();\r\n    }\r\n\r\n    public placeWhite(coor: cc.Vec2) {\r\n        this.graphics.strokeColor = cc.Color.WHITE;\r\n        this.graphics.fillColor = cc.Color.WHITE;\r\n        this.graphics.circle(this.startX + coor.x * this.tileWidth, this.startY + coor.y * this.tileWidth, this.tileWidth * 0.45);\r\n        this.graphics.fill();\r\n        this.pieceMap[coor.x][coor.y] = new GobangPiece(coor.x, coor.y, WHITE);\r\n        this.lastPiece = this.pieceMap[coor.x][coor.y];\r\n        this.drawLastPieceRect();\r\n    }\r\n\r\n    public getPieceByCoor(coor: cc.Vec2): GobangPiece {\r\n        return this.pieceMap[coor.x][coor.y];\r\n    }\r\n\r\n    private onTouched(event: cc.Event.EventTouch) {\r\n        let localPos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        let coor = this.getCoorByPos(localPos);\r\n        this.gobangScene.onBoardTouched(coor);\r\n    }\r\n\r\n    private getCoorByPos(pos: cc.Vec2): cc.Vec2 {\r\n        let touchCol = Math.round((pos.x - this.startX) / this.tileWidth);\r\n        let touchRow = Math.round((pos.y - this.startY) / this.tileWidth);\r\n        return cc.v2(touchCol, touchRow);\r\n    }\r\n\r\n    public judgeWin(): boolean {\r\n        //判断横向\r\n        let fiveCount = 0;\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            if (this.pieceMap[x][this.lastPiece.y].color === this.lastPiece.color) {\r\n                fiveCount++;\r\n                if (fiveCount === 5) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                fiveCount = 0;\r\n            }\r\n        }\r\n        //判断纵向\r\n        fiveCount = 0;\r\n        for (let y = 0; y < this.rowsSum; y++) {\r\n            if (this.pieceMap[this.lastPiece.x][y].color === this.lastPiece.color) {\r\n                fiveCount++;\r\n                if (fiveCount == 5) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                fiveCount = 0;\r\n            }\r\n        }\r\n        //判断右上斜向\r\n        let f = this.lastPiece.y - this.lastPiece.x;\r\n        fiveCount = 0;\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            if (f + x < 0 || f + x >= this.rowsSum) {\r\n                continue;\r\n            }\r\n            if (this.pieceMap[x][f + x].color === this.lastPiece.color) {\r\n                fiveCount++;\r\n                if (fiveCount == 5) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                fiveCount = 0;\r\n            }\r\n        }\r\n        //判断右下斜向\r\n        f = this.lastPiece.y + this.lastPiece.x;\r\n        fiveCount = 0;\r\n        for (let x = 0; x < 15; x++) {\r\n            if (f - x < 0 || f - x >= this.rowsSum) {\r\n                continue;\r\n            }\r\n            if (this.pieceMap[x][f - x].color === this.lastPiece.color) {\r\n                fiveCount++;\r\n                if (fiveCount == 5) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                fiveCount = 0;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private addListeners() {\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouched, this);\r\n    }\r\n\r\n    private removeListeners() {\r\n\r\n    }\r\n}"]}