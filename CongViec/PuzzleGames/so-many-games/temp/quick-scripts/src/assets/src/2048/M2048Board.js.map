{"version":3,"sources":["assets\\src\\2048\\M2048Board.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { M2048Piece } from \"./M2048Piece\";\r\nimport { M2048Scene } from \"./M2048Scene\";\r\nimport { DIR } from \"./M2048Constants\";\r\n\r\nconst { ccclass, property, executeInEditMode } = cc._decorator;\r\n\r\n@ccclass\r\n@executeInEditMode\r\nexport class M2048Board extends cc.Component {\r\n    @property(cc.Integer)\r\n    private colsSum: number = 4;\r\n    @property(cc.Integer)\r\n    private rowsSum: number = 4;\r\n    @property(cc.Graphics)\r\n    private graphics: cc.Graphics = null; // 用来画棋盘\r\n    @property(cc.Prefab)\r\n    private piecePrefab: cc.Prefab = null; // 画不了文字，只能用prefab了\r\n    @property(cc.Node)\r\n    private pieceLayer: cc.Node = null;\r\n\r\n    private tileWidth: number = 0; // 一个方块的宽度\r\n    private startX: number = 0; // 棋盘左下角\r\n    private startY: number = 0;\r\n    private boardWidth: number = 0; // 棋盘节点宽高\r\n    private boardHeight: number = 0;\r\n    public pieceMap: Array<Array<M2048Piece>>;\r\n\r\n    private m2048Scene: M2048Scene = null;\r\n\r\n    protected onLoad() {\r\n        this.tileWidth = this.node.width / (this.colsSum + 1);\r\n        this.startX = this.tileWidth / 2;\r\n        this.startY = this.tileWidth / 2;\r\n        this.boardWidth = this.tileWidth * this.colsSum;\r\n        this.boardHeight = this.tileWidth * this.rowsSum;\r\n        this.graphics.clear();\r\n        // 画棋盘\r\n        this.graphics.strokeColor = cc.Color.BLACK;\r\n        for (let x = 0; x < this.colsSum + 1; x++) {\r\n            this.graphics.moveTo(this.startX + x * this.tileWidth, this.startY);\r\n            this.graphics.lineTo(this.startX + x * this.tileWidth, this.startY + this.boardHeight);\r\n            this.graphics.stroke();\r\n        }\r\n        for (let y = 0; y < this.rowsSum + 1; y++) {\r\n            this.graphics.moveTo(this.startX, this.startY + y * this.tileWidth);\r\n            this.graphics.lineTo(this.startX + this.boardWidth, this.startY + y * this.tileWidth);\r\n            this.graphics.stroke();\r\n        }\r\n        // 初始化数字位置\r\n        this.pieceLayer.removeAllChildren();\r\n        this.pieceMap = [];\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            this.pieceMap[x] = [];\r\n            for (let y = 0; y < this.rowsSum; y++) {\r\n                let piece = cc.instantiate(this.piecePrefab).getComponent(M2048Piece);\r\n                piece.node.parent = this.pieceLayer;\r\n                piece.node.x = this.startX + x * this.tileWidth + this.tileWidth / 2;\r\n                piece.node.y = this.startY + y * this.tileWidth + this.tileWidth / 2;\r\n                this.pieceMap[x][y] = piece;\r\n                piece.init(x, x, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public init(m2048Scene: M2048Scene) {\r\n        this.m2048Scene = m2048Scene;\r\n        this.reset();\r\n        this.addListeners();\r\n    }\r\n\r\n    public reset() {\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            for (let y = 0; y < this.rowsSum; y++) {\r\n                this.pieceMap[x][y].n = 0;\r\n            }\r\n        }\r\n        for (let i = 0; i < 2; i++) {\r\n            this.newPiece();\r\n        }\r\n    }\r\n\r\n    newPiece() {\r\n        let zeroPieces = [];\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            for (let y = 0; y < this.rowsSum; y++) {\r\n                if (this.pieceMap[x][y].n === 0) {\r\n                    zeroPieces.push(this.pieceMap[x][y]);\r\n                }\r\n            }\r\n        }\r\n        let n = Math.floor(Math.random() * zeroPieces.length);\r\n        zeroPieces[n].randomNumber();\r\n    }\r\n\r\n    judgeOver(): boolean {\r\n        for (let y = 0; y < this.rowsSum; y++) {\r\n            for (let x = 0; x < this.colsSum; x++) {\r\n                if (this.pieceMap[x][y].n === 0) {\r\n                    return false;\r\n                }\r\n                if (x <= this.colsSum - 2 && this.pieceMap[x][y].n === this.pieceMap[x + 1][y].n) {\r\n                    return false;\r\n                }\r\n                if (y <= this.rowsSum - 2 && this.pieceMap[x][y].n === this.pieceMap[x][y + 1].n) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getMaxNLabel(): string {\r\n        let max = 2;\r\n        let str = \"2\";\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            for (let y = 0; y < this.rowsSum; y++) {\r\n                if (this.pieceMap[x][y].n > max) {\r\n                    max = this.pieceMap[x][y].n;\r\n                    str = this.pieceMap[x][y].nLabel.string;\r\n                }\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    slideLeft(): boolean {\r\n        //左滑F\r\n        //合并\r\n        let isMove = false;\r\n        for (let y = 0; y < this.rowsSum; y++) {\r\n            for (let x = 0; x < this.colsSum; x++) {\r\n                if (this.pieceMap[x][y].n === 0) {\r\n                    continue;\r\n                }\r\n                for (let x0 = x + 1; x0 < this.colsSum; x0++) {\r\n                    if (this.pieceMap[x0][y].n === 0) {\r\n                        continue;\r\n                    } else if (this.pieceMap[x][y].n === this.pieceMap[x0][y].n) {\r\n                        this.pieceMap[x][y].n *= 2;\r\n                        this.pieceMap[x0][y].n = 0;\r\n                        isMove = true;\r\n                        break;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //移动\r\n        for (let y = 0; y < this.rowsSum; y++) {\r\n            for (let x = 0; x < this.colsSum; x++) {\r\n                if (this.pieceMap[x][y].n !== 0) {\r\n                    continue;\r\n                }\r\n                for (let x0 = x + 1; x0 < this.rowsSum; x0++) {\r\n                    if (this.pieceMap[x0][y].n === 0) {\r\n                        continue;\r\n                    } else {\r\n                        this.pieceMap[x][y].n = this.pieceMap[x0][y].n;\r\n                        this.pieceMap[x0][y].n = 0;\r\n                        isMove = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isMove) {\r\n            this.newPiece();\r\n        }\r\n        return isMove;\r\n    }\r\n\r\n    slideRight(): boolean {\r\n        //右滑\r\n        //合并\r\n        let isMove = false; //判断是否有tile移动\r\n        for (let y = 0; y < this.rowsSum; y++) {\r\n            for (let x = this.colsSum - 1; x >= 0; x--) {\r\n                if (this.pieceMap[x][y].n === 0) {\r\n                    continue;\r\n                }\r\n                for (let x0 = x - 1; x0 >= 0; x0--) {\r\n                    if (this.pieceMap[x0][y].n === 0) {\r\n                        continue;\r\n                    } else if (this.pieceMap[x][y].n === this.pieceMap[x0][y].n) {\r\n                        this.pieceMap[x][y].n = this.pieceMap[x][y].n * 2;\r\n                        this.pieceMap[x0][y].n = 0;\r\n                        isMove = true;\r\n                        break;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //移动\r\n        for (let y = 0; y < this.rowsSum; y++) {\r\n            for (let x = this.colsSum - 1; x >= 0; x--) {\r\n                if (this.pieceMap[x][y].n !== 0) {\r\n                    continue;\r\n                }\r\n                for (let x0 = x - 1; x0 >= 0; x0--) {\r\n                    if (this.pieceMap[x0][y].n === 0) {\r\n                        continue;\r\n                    } else {\r\n                        this.pieceMap[x][y].n = this.pieceMap[x0][y].n;\r\n                        this.pieceMap[x0][y].n = 0;\r\n                        isMove = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //有tile移动才添加新的tile\r\n        if (isMove) {\r\n            this.newPiece();\r\n        }\r\n        return isMove;\r\n    }\r\n\r\n    slideDown(): boolean {\r\n        //下滑\r\n        //合并\r\n        let isMove = false;\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            for (let y = 0; y < this.rowsSum; y++) {\r\n                if (this.pieceMap[x][y].n === 0) {\r\n                    continue;\r\n                }\r\n                for (let y0 = y + 1; y0 < 4; y0++) {\r\n                    if (this.pieceMap[x][y0].n === 0) {\r\n                        continue;\r\n                    } else if (this.pieceMap[x][y].n === this.pieceMap[x][y0].n) {\r\n                        this.pieceMap[x][y].n = this.pieceMap[x][y].n * 2;\r\n                        this.pieceMap[x][y0].n = 0;\r\n                        isMove = true;\r\n                        break;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //移动\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            for (let y = 0; y < this.rowsSum; y++) {\r\n                if (this.pieceMap[x][y].n !== 0) {\r\n                    continue;\r\n                }\r\n                for (let y0 = y + 1; y0 < this.rowsSum; y0++) {\r\n                    if (this.pieceMap[x][y0].n === 0) {\r\n                        continue;\r\n                    } else {\r\n                        this.pieceMap[x][y].n = this.pieceMap[x][y0].n;\r\n                        this.pieceMap[x][y0].n = 0;\r\n                        isMove = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isMove) {\r\n            this.newPiece();\r\n        }\r\n        return isMove;\r\n    }\r\n\r\n    slideUp(): boolean {\r\n        //上滑\r\n        //合并\r\n        let isMove = false;\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            for (let y = this.rowsSum - 1; y >= 0; y--) {\r\n                if (this.pieceMap[x][y].n === 0) {\r\n                    continue;\r\n                }\r\n                for (let y0 = y - 1; y0 >= 0; y0--) {\r\n                    if (this.pieceMap[x][y0].n === 0) {\r\n                        continue;\r\n                    } else if (this.pieceMap[x][y].n === this.pieceMap[x][y0].n) {\r\n                        this.pieceMap[x][y].n = this.pieceMap[x][y].n * 2;\r\n                        this.pieceMap[x][y0].n = 0;\r\n                        isMove = true;\r\n                        break;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //移动\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            for (let y = this.rowsSum - 1; y >= 0; y--) {\r\n                if (this.pieceMap[x][y].n != 0) {\r\n                    continue;\r\n                }\r\n                for (let y0 = y - 1; y0 >= 0; y0--) {\r\n                    if (this.pieceMap[x][y0].n == 0) {\r\n                        continue;\r\n                    } else {\r\n                        this.pieceMap[x][y].n = this.pieceMap[x][y0].n;\r\n                        this.pieceMap[x][y0].n = 0;\r\n                        isMove = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isMove) {\r\n            this.newPiece();\r\n        }\r\n        return isMove;\r\n    }\r\n\r\n    private onTouched(event: cc.Event.EventTouch) {\r\n        let startPos = event.getStartLocation();\r\n        let endPos = event.getLocation();\r\n        let offsetX = endPos.x - startPos.x;\r\n        let offsetY = endPos.y - startPos.y;\r\n        if (Math.abs(offsetX) > Math.abs(offsetY)) {\r\n            if (offsetX > 40) {\r\n                this.m2048Scene.onBoardSlid(DIR.RIGHT);\r\n            } else if (offsetX < -40) {\r\n                this.m2048Scene.onBoardSlid(DIR.LEFT);\r\n            }\r\n        } else {\r\n            if (offsetY > 40) {\r\n                this.m2048Scene.onBoardSlid(DIR.UP);\r\n            } else if (offsetY < -40) {\r\n                this.m2048Scene.onBoardSlid(DIR.DOWN);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onKey(event) {\r\n        switch (event.keyCode) {\r\n            case cc.KEY.up:\r\n            case cc.KEY.w:\r\n                this.m2048Scene.onBoardSlid(DIR.UP);\r\n                break;\r\n            case cc.KEY.down:\r\n            case cc.KEY.s:\r\n                this.m2048Scene.onBoardSlid(DIR.DOWN);\r\n                break;\r\n            case cc.KEY.left:\r\n            case cc.KEY.a:\r\n                this.m2048Scene.onBoardSlid(DIR.LEFT);\r\n                break;\r\n            case cc.KEY.right:\r\n            case cc.KEY.d:\r\n                this.m2048Scene.onBoardSlid(DIR.RIGHT);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private addListeners() {\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouched, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKey, this);\r\n    }\r\n\r\n    private removeListeners() {\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKey, this);\r\n    }\r\n}\r\n"]}