{"version":3,"sources":["assets\\src\\reversi\\ReversiScene.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ReversiBoard } from \"./ReversiBoard\";\r\nimport { ReversiAI } from \"./ReversiAI\";\r\nimport { NONE, BLACK, WHITE } from \"./ReversiConstants\";\r\nimport { G } from \"../G\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class ReversiScene extends cc.Component {\r\n    @property(ReversiBoard)\r\n    private board: ReversiBoard = null;\r\n    @property(cc.Label)\r\n    private blackScoreLabel: cc.Label = null;\r\n    @property(cc.Label)\r\n    private whiteScoreLabel: cc.Label = null;\r\n\r\n    private ai: ReversiAI = null;\r\n    public state = NONE;\r\n\r\n    start() {\r\n        this.board.init(this);\r\n        this.ai = new ReversiAI(this.board);\r\n        this.startGame();\r\n    }\r\n\r\n    startGame() {\r\n        this.state = BLACK;\r\n        this.board.reset();\r\n        this.blackScoreLabel.string = \"2\";\r\n        this.whiteScoreLabel.string = \"2\";\r\n        G.gameRoot.showTip(\"你是黑棋你先走\");\r\n    }\r\n\r\n    overGame() {\r\n        let { blackPieceSum, whitePieceSum } = this.board.getPieceCount();\r\n        if (blackPieceSum > whitePieceSum) {\r\n            cc.log(\"白棋胜\");\r\n            G.gameRoot.showMaskMessage(\"你赢了阿尔法二狗！\",\r\n                { label: \"朕知道了\", cb: () => { }, target: this });\r\n        } else if (blackPieceSum < whitePieceSum) {\r\n            cc.log(\"黑棋胜\");\r\n            G.gameRoot.showMaskMessage(\"你输给了阿尔法二狗！\",\r\n                { label: \"服了\", cb: () => { }, target: this },\r\n                { label: \"不服\", cb: () => { }, target: this });\r\n        } else {\r\n            cc.log(\"平局\");\r\n            G.gameRoot.showMaskMessage(\"你和阿尔法二狗五五开!\",\r\n                { label: \"朕知道了\", cb: () => { }, target: this });\r\n        }\r\n        this.state = NONE;\r\n    }\r\n\r\n    updateScore() {\r\n        let { blackPieceSum, whitePieceSum } = this.board.getPieceCount();\r\n        this.blackScoreLabel.string = blackPieceSum + \"\";\r\n        this.whiteScoreLabel.string = whitePieceSum + \"\";\r\n    }\r\n\r\n    onBtnReturn() {\r\n        G.returnHall();\r\n    }\r\n\r\n    onBtnRestart() {\r\n        this.startGame();\r\n    }\r\n\r\n    runAi() {\r\n        this.scheduleOnce(() => {\r\n            let coor = this.ai.getNextCoor();\r\n            this.board.placeWhite(coor);\r\n            let piece = this.board.getPieceByCoor(coor);\r\n            for (let dir = 1; dir <= 8; dir++) {\r\n                if (this.board.judgePass(WHITE, piece, dir)) {\r\n                    this.board.changePass(piece, dir);\r\n                }\r\n            }\r\n            this.updateScore();\r\n            if (this.board.judgeWin()) {\r\n                this.overGame();\r\n            } else {\r\n                if (this.board.judgeMoveable(BLACK)) {\r\n                    this.state = BLACK;\r\n                } else {\r\n                    G.gameRoot.showTip(\"黑棋无地可下，白棋继续\");\r\n                    this.runAi();\r\n                }\r\n            }\r\n        }, 1);\r\n    }\r\n\r\n    onBoardTouched(coor: cc.Vec2) {\r\n        switch (this.state) {\r\n            case NONE:\r\n\r\n                break;\r\n            case BLACK:\r\n                let piece = this.board.getPieceByCoor(coor);\r\n                if (piece.color !== NONE) {\r\n                    G.gameRoot.showTip(\"这里有子了，你是不是傻\");\r\n                    return;\r\n                }\r\n                if (!this.board.canPlace(this.state, coor)) {\r\n                    G.gameRoot.showTip(\"不符合规则\");\r\n                    return;\r\n                }\r\n                this.board.placeBlack(coor);\r\n                piece = this.board.getPieceByCoor(coor);\r\n                for (let dir = 1; dir <= 8; dir++) {\r\n                    if (this.board.judgePass(BLACK, piece, dir)) {\r\n                        this.board.changePass(piece, dir);\r\n                    }\r\n                }\r\n                this.updateScore();\r\n                if (this.board.judgeWin()) {\r\n                    this.overGame();\r\n                } else {\r\n                    if (this.board.judgeMoveable(WHITE)) {\r\n                        this.state = WHITE;\r\n                        this.runAi();\r\n                    } else {\r\n                        G.gameRoot.showTip(\"白棋无地可下，黑棋继续\");\r\n                    }\r\n                }\r\n                break;\r\n            case WHITE:\r\n\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n\r\n}\r\n"]}