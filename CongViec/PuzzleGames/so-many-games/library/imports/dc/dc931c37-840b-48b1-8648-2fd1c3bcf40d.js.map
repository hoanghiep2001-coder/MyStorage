{"version":3,"sources":["assets\\src\\link\\LinkScene.ts"],"names":[],"mappings":";;;;;;AAAA,yCAAwC;AACxC,iDAAwC;AACxC,0BAAyB;AACzB,yCAAwC;AAElC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA+B,6BAAY;IAA3C;QAAA,qEAqCC;QAlCW,WAAK,GAAc,IAAI,CAAC;QAExB,gBAAU,GAAY,IAAI,CAAC;QAE3B,WAAK,GAAU,IAAI,CAAC;QAEpB,WAAK,GAAG,qBAAK,CAAC,IAAI,CAAC;;IA4B/B,CAAC;IA1BG,yBAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAEO,6BAAS,GAAjB;QACI,IAAI,CAAC,KAAK,GAAG,qBAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAEM,4BAAQ,GAAf;QAAA,iBAIC;QAHG,IAAI,CAAC,KAAK,GAAG,qBAAK,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,KAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,cAAK,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAA,CAAA,CAAC,EAAC,CAAC,CAAC;IACpI,CAAC;IAEO,+BAAW,GAAnB;QACI,KAAC,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEO,gCAAY,GAApB;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAjCD;QADC,QAAQ,CAAC,qBAAS,CAAC;4CACY;IAEhC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACiB;IAEnC;QADC,QAAQ,CAAC,aAAK,CAAC;4CACY;IAPnB,SAAS;QADrB,OAAO;OACK,SAAS,CAqCrB;IAAD,gBAAC;CArCD,AAqCC,CArC8B,EAAE,CAAC,SAAS,GAqC1C;AArCY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["import { LinkBoard } from \"./LinkBoard\";\r\nimport { STATE } from \"./LinkConstants\";\r\nimport { G } from \"../G\";\r\nimport { Timer } from \"../shared/Timer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class LinkScene extends cc.Component {\r\n\r\n    @property(LinkBoard)\r\n    private board: LinkBoard = null;\r\n    @property(cc.Node)\r\n    private rewardNode: cc.Node = null;\r\n    @property(Timer)\r\n    private timer: Timer = null;\r\n\r\n    private state = STATE.NONE;\r\n\r\n    start() {\r\n        this.board.init(this);\r\n        this.startGame();\r\n    }\r\n\r\n    private startGame() {\r\n        this.state = STATE.START;\r\n        this.board.reset();\r\n        this.rewardNode.active = false;\r\n        this.timer.reset();\r\n        this.timer.run();\r\n    }\r\n\r\n    public overGame() {\r\n        this.state = STATE.OVER;\r\n        this.timer.stop();\r\n        G.gameRoot.showMaskMessage(\"你用了\" + this.timer.time.toFixed(1) + \"秒\", { label: \"领取奖励\", cb: ()=>{this.rewardNode.active = true}});\r\n    }\r\n\r\n    private onBtnReturn() {\r\n        G.returnHall();\r\n    }\r\n\r\n    private onBtnRestart() {\r\n        this.startGame();\r\n    }\r\n}\r\n"]}