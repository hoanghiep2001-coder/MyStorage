{"version":3,"sources":["assets\\src\\puzzle\\PuzzleScene.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { STATE } from \"./PuzzleConstants\";\r\nimport { PuzzleBoard } from \"./PuzzleBoard\";\r\nimport { G } from \"../G\";\r\nimport { Timer } from \"../shared/Timer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PuzzleScene extends cc.Component {\r\n\r\n    @property(PuzzleBoard)\r\n    private board: PuzzleBoard = null;\r\n    @property(Timer)\r\n    private timer: Timer = null;\r\n    @property(cc.Node)\r\n    private winPanel: cc.Node = null;\r\n\r\n    private level: number = 3;\r\n    public state: STATE = STATE.NONE;\r\n\r\n    start() {\r\n        this.addListeners();\r\n        this.board.init(this);\r\n        this.startGame();\r\n    }\r\n\r\n    private startGame() {\r\n        this.winPanel.active = false;\r\n        this.state = STATE.START;\r\n        this.board.reset(this.level);\r\n        this.timer.reset();\r\n        this.timer.run();\r\n    }\r\n\r\n    private overGame() {\r\n        this.winPanel.active = true;\r\n        this.state = STATE.OVER;\r\n        this.timer.stop();\r\n        G.gameRoot.showMaskMessage(\"你坚持了\" + this.timer.time.toFixed(1) + \"秒\", { label: \"呵呵\" });\r\n    }\r\n\r\n    public onBoardTouch(x: number, y: number) {\r\n        if (this.state = STATE.START) {\r\n            let isMove = this.board.movePiece(x, y);\r\n            if (!isMove) {\r\n                G.gameRoot.showTip(\"不符合规则\");\r\n            } else {\r\n                if (this.board.judgeWin()) {\r\n                    this.overGame();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public onBtnLevelEasy() {\r\n        this.level = 3;\r\n        this.startGame();\r\n    }\r\n\r\n    public onBtnLevelNormal() {\r\n        this.level = 5;\r\n        this.startGame();\r\n    }\r\n\r\n    public onBtnLevelHard() {\r\n        this.level = 10;\r\n        this.startGame();\r\n    }\r\n\r\n    onBtnReturn() {\r\n        G.returnHall();\r\n    }\r\n\r\n    onBtnRestart() {\r\n        this.startGame();\r\n    }\r\n\r\n    private addListeners() {\r\n\r\n    }\r\n\r\n    private removeListeners() {\r\n\r\n    }\r\n\r\n}\r\n"]}