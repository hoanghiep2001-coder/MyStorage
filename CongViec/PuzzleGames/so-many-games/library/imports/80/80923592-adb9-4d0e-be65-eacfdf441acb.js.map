{"version":3,"sources":["assets\\src\\reversi\\ReversiBoard.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ReversiPiece } from \"./ReversiPiece\";\r\nimport { ReversiScene } from \"./ReversiScene\";\r\nimport { NONE, BLACK, WHITE } from \"./ReversiConstants\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class ReversiBoard extends cc.Component {\r\n    @property(cc.Integer)\r\n    private colsSum: number = 8;\r\n    @property(cc.Integer)\r\n    private rowsSum: number = 8;\r\n    @property(cc.Graphics)\r\n    private graphics: cc.Graphics = null; // 用来画棋盘\r\n    @property(cc.Graphics)\r\n    private graphics2: cc.Graphics = null; // 用来画棋子\r\n\r\n    private tileWidth: number = 0; // 一个方块的宽度\r\n    private startX: number = 0; // 棋盘左下角\r\n    private startY: number = 0;\r\n    private boardWidth: number = 0; // 棋盘节点宽高\r\n    private boardHeight: number = 0;\r\n    public pieceMap: Array<Array<ReversiPiece>>;\r\n    public lastPiece: ReversiPiece = null;\r\n\r\n    private reversiScene: ReversiScene = null;\r\n\r\n    public init(reversiScene: ReversiScene) {\r\n        this.reversiScene = reversiScene;\r\n\r\n        this.tileWidth = this.node.width / (this.colsSum + 1);\r\n        this.startX = this.tileWidth / 2;\r\n        this.startY = this.tileWidth / 2;\r\n        this.boardWidth = this.tileWidth * this.colsSum;\r\n        this.boardHeight = this.tileWidth * this.rowsSum;\r\n        this.reset();\r\n\r\n        this.addListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this.graphics.clear();\r\n        this.graphics2.clear();\r\n        // 画棋盘\r\n        this.graphics.strokeColor = cc.Color.BLACK;\r\n        for (let x = 0; x < this.colsSum + 1; x++) {\r\n            this.graphics.moveTo(this.startX + x * this.tileWidth, this.startY);\r\n            this.graphics.lineTo(this.startX + x * this.tileWidth, this.startY + this.boardHeight);\r\n            this.graphics.stroke();\r\n        }\r\n        for (let y = 0; y < this.rowsSum + 1; y++) {\r\n            this.graphics.moveTo(this.startX, this.startY + y * this.tileWidth);\r\n            this.graphics.lineTo(this.startX + this.boardWidth, this.startY + y * this.tileWidth);\r\n            this.graphics.stroke();\r\n        }\r\n\r\n        this.pieceMap = [];\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            this.pieceMap[x] = [];\r\n            for (let y = 0; y < this.rowsSum; y++) {\r\n                this.pieceMap[x][y] = new ReversiPiece(x, y, NONE);\r\n            }\r\n        }\r\n\r\n        this.placeBlack(cc.v2(Math.floor(this.colsSum / 2) - 1, Math.floor(this.rowsSum / 2) - 1));\r\n        this.placeBlack(cc.v2(Math.floor(this.colsSum / 2), Math.floor(this.rowsSum / 2)));\r\n        this.placeWhite(cc.v2(cc.v2(Math.floor(this.colsSum / 2) - 1, Math.floor(this.rowsSum / 2))));\r\n        this.placeWhite(cc.v2(cc.v2(Math.floor(this.colsSum / 2), Math.floor(this.rowsSum / 2) - 1)));\r\n\r\n    }\r\n\r\n    private refresh() {\r\n        this.graphics2.clear();\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            for (let y = 0; y < this.rowsSum; y++) {\r\n                if (this.pieceMap[x][y].color === BLACK) {\r\n                    this.graphics2.strokeColor = cc.Color.BLACK;\r\n                    this.graphics2.fillColor = cc.Color.BLACK;\r\n                    this.graphics2.circle(this.startX + x * this.tileWidth + this.tileWidth / 2, this.startY + y * this.tileWidth + this.tileWidth / 2, this.tileWidth * 0.45);\r\n                    this.graphics2.fill();\r\n                } else if (this.pieceMap[x][y].color === WHITE) {\r\n                    this.graphics2.strokeColor = cc.Color.WHITE;\r\n                    this.graphics2.fillColor = cc.Color.WHITE;\r\n                    this.graphics2.circle(this.startX + x * this.tileWidth + this.tileWidth / 2, this.startY + y * this.tileWidth + this.tileWidth / 2, this.tileWidth * 0.45);\r\n                    this.graphics2.fill();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public placeBlack(coor: cc.Vec2) {\r\n        this.pieceMap[coor.x][coor.y] = new ReversiPiece(coor.x, coor.y, BLACK);\r\n        this.lastPiece = this.pieceMap[coor.x][coor.y];\r\n        this.refresh();\r\n    }\r\n\r\n    public placeWhite(coor: cc.Vec2) {\r\n        this.pieceMap[coor.x][coor.y] = new ReversiPiece(coor.x, coor.y, WHITE);\r\n        this.lastPiece = this.pieceMap[coor.x][coor.y];\r\n        this.refresh();\r\n    }\r\n\r\n    public getPieceByCoor(coor: cc.Vec2): ReversiPiece {\r\n        return this.pieceMap[coor.x][coor.y];\r\n    }\r\n\r\n    private onTouched(event: cc.Event.EventTouch) {\r\n        let localPos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        if (localPos.x < this.startX || localPos.y < this.startY\r\n            || localPos.x > this.startX + this.boardWidth\r\n            || localPos.y > this.startY + this.boardHeight) {\r\n            return;\r\n        }\r\n        let coor = this.getCoorByPos(localPos);\r\n        this.reversiScene.onBoardTouched(coor);\r\n    }\r\n\r\n    private getCoorByPos(pos: cc.Vec2): cc.Vec2 {\r\n        let touchCol = Math.round((pos.x - this.startX - this.tileWidth / 2) / this.tileWidth);\r\n        let touchRow = Math.round((pos.y - this.startY - this.tileWidth / 2) / this.tileWidth);\r\n        return cc.v2(touchCol, touchRow);\r\n    }\r\n\r\n    private nearPiece(piece: ReversiPiece, dir: number): ReversiPiece {\r\n        switch (dir) {\r\n            case 1://left\r\n                if (piece.x !== 0) {\r\n                    return this.pieceMap[piece.x - 1][piece.y];\r\n                }\r\n                break;\r\n            case 2://left up\r\n                if (piece.x !== 0 && piece.y !== this.rowsSum - 1) {\r\n                    return this.pieceMap[piece.x - 1][piece.y + 1];\r\n                }\r\n                break;\r\n            case 3://up\r\n                if (piece.y !== this.rowsSum - 1) {\r\n                    return this.pieceMap[piece.x][piece.y + 1];\r\n                }\r\n                break;\r\n            case 4://right up\r\n                if (piece.x !== this.colsSum - 1 && piece.y !== this.rowsSum - 1) {\r\n                    return this.pieceMap[piece.x + 1][piece.y + 1];\r\n                }\r\n                break;\r\n            case 5://right\r\n                if (piece.x !== this.colsSum - 1) {\r\n                    return this.pieceMap[piece.x + 1][piece.y];\r\n                }\r\n                break;\r\n            case 6://right down\r\n                if (piece.x !== this.colsSum - 1 && piece.y !== 0) {\r\n                    return this.pieceMap[piece.x + 1][piece.y - 1];\r\n                }\r\n                break;\r\n            case 7://down\r\n                if (piece.y !== 0) {\r\n                    return this.pieceMap[piece.x][piece.y - 1];\r\n                }\r\n                break;\r\n            case 8://left down\r\n                if (piece.x !== 0 && piece.y !== 0) {\r\n                    return this.pieceMap[piece.x - 1][piece.y - 1];\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    judgePass(stand: number, piece: ReversiPiece, dir: number) {\r\n        let tempPiece = piece;\r\n        tempPiece = this.nearPiece(piece, dir);\r\n        if (tempPiece === null) {\r\n            return false;\r\n        }\r\n        while (tempPiece.color === -stand) {\r\n            tempPiece = this.nearPiece(tempPiece, dir);\r\n            if (tempPiece === null) {\r\n                return false;\r\n            }\r\n            if (tempPiece.color === stand) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    changePass(piece: ReversiPiece, dir: number) {\r\n        let tempPiece = this.nearPiece(piece, dir);\r\n        while (tempPiece.color === -this.reversiScene.state) {\r\n            tempPiece.color = piece.color;\r\n            tempPiece = this.nearPiece(tempPiece, dir);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    canPlace(color:number,coor:cc.Vec2):boolean {\r\n        for (let dir = 1; dir <= 8; dir++) {\r\n            if (this.judgePass(color, this.getPieceByCoor(coor), dir)) {\r\n                return true;\r\n            }\r\n            if (dir === 8) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    judgeMoveable(stand) {//判断stand是否有可落子的地方\r\n        let tryPiece = null;\r\n        for (let x = 0; x < this.colsSum; x++) {\r\n            for (let y = 0; y < this.rowsSum; y++) {\r\n                tryPiece = this.pieceMap[x][y];\r\n                if (tryPiece.color === NONE) {\r\n                    for (let dir = 1; dir <= 8; dir++) {\r\n                        if (this.judgePass(stand, tryPiece, dir)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    judgeWin() {\r\n        let selfMoveAble = this.judgeMoveable(this.lastPiece.color);\r\n        let oppoMoveAble = this.judgeMoveable(-this.lastPiece.color);\r\n        if (!selfMoveAble && !oppoMoveAble) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getPieceCount() {\r\n        let blackPieceSum = 0;\r\n        let whitePieceSum = 0;\r\n        for (let x = 0; x < this.pieceMap.length; x++) {\r\n            for (let y = 0; y < this.pieceMap[x].length; y++) {\r\n                if (this.pieceMap[x][y].color === BLACK) {\r\n                    blackPieceSum++;\r\n                } else if (this.pieceMap[x][y].color === WHITE) {\r\n                    whitePieceSum++;\r\n                }\r\n            }\r\n        }\r\n        return { blackPieceSum, whitePieceSum };\r\n    }\r\n\r\n    private addListeners() {\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouched, this);\r\n    }\r\n\r\n    private removeListeners() {\r\n\r\n    }\r\n}\r\n"]}