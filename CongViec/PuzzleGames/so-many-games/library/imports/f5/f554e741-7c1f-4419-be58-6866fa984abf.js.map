{"version":3,"sources":["assets\\src\\reversi\\ReversiAI.ts"],"names":[],"mappings":";;;;;;AACA,uDAAwD;AAExD;IACI,mBAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;IAAI,CAAC;IAE5C,+BAAW,GAAX;QACI,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,uBAAI,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,wBAAK,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAE;oBACnF,OAAO;oBACP,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;wBACtG,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;qBACrB;yBAAI;wBACD,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBAClC;iBACJ;aACJ;SACJ;QACD,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACtD,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IACL,gBAAC;AAAD,CApBA,AAoBC,IAAA;AApBY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["import { ReversiBoard } from \"./ReversiBoard\";\r\nimport { NONE, BLACK, WHITE } from \"./ReversiConstants\";\r\n\r\nexport class ReversiAI {\r\n    constructor(private board: ReversiBoard) { }\r\n\r\n    getNextCoor(): cc.Vec2 {\r\n        let moveableList = [];\r\n        for (let x = 0; x < this.board.pieceMap.length; x++) {\r\n            for (let y = 0; y < this.board.pieceMap[x].length; y++) {\r\n                if (this.board.pieceMap[x][y].color === NONE && this.board.canPlace(WHITE,cc.v2(x,y))) {\r\n                    // 优先占边\r\n                    if (x === 0 || y === 0 || x === this.board.pieceMap.length - 1 || y === this.board.pieceMap[x].length - 1){\r\n                        return cc.v2(x,y);\r\n                    }else{\r\n                        moveableList.push(cc.v2(x, y));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let n = Math.floor(Math.random()*moveableList.length);\r\n        return moveableList[n];\r\n    }\r\n}\r\n"]}