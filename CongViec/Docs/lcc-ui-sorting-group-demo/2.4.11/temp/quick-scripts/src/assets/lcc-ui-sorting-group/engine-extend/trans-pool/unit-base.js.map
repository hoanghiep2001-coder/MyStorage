{"version":3,"sources":["assets\\lcc-ui-sorting-group\\engine-extend\\trans-pool\\unit-base.js"],"names":["POINTER_INVALID_FLAG","SPACE_FREE_FLAG","SPACE_USE_FLAG","POS_NEXT_FREE","POS_FREE_FLAG","UnitBase","unitID","memPool","contentNum","_memPool","_data","Uint16Array","_contentNum","_signData","_spacesData","i","signIndex","index","UnitBaseProto","prototype","hasSpace","isAllFree","pop","headFreeIndex","space","push","dump","spaceNum","freeStr","usingNum","usingStr","freeFlag","totalNum","console","log","cc","error","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["/****************************************************************************\r\n Copyright (c) 2019 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated engine source code (the \"Software\"), a limited,\r\n worldwide, royalty-free, non-assignable, revocable and non-exclusive license\r\n to use Cocos Creator solely to develop games on your target platforms. You shall\r\n not use Cocos Creator software for developing other software or tools that's\r\n used for developing games. You are not granted to publish, distribute,\r\n sublicense, and/or sell copies of Cocos Creator.\r\n\r\n The software or tools in this License Agreement are licensed, not sold.\r\n Xiamen Yaji Software Co., Ltd. reserves all rights not expressly granted to you.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n ****************************************************************************/\r\n\r\n// Unit has many segment, layout such as :\r\n// Head Free Pointer + Using Segment Num + Segment 1 + Segment 2 + Segment 3 ...\r\n\r\n// sign data format\r\n// Space : [If Free Flag]                          [Size:1 Uint16]\r\n// Space : [Next Free Index]                       [Size:1 Uint16]\r\n\r\n// invalid pointer value\r\nlet POINTER_INVALID_FLAG = 0xffff;\r\nlet SPACE_FREE_FLAG = 0x0;\r\nlet SPACE_USE_FLAG = 0x1;\r\nlet POS_NEXT_FREE = 0;\r\nlet POS_FREE_FLAG = 1;\r\n\r\nlet UnitBase = function (unitID, memPool, contentNum) {\r\n    contentNum = contentNum || 128;\r\n\r\n    // set unit id\r\n    this.unitID = unitID;\r\n    this._memPool = memPool;\r\n\r\n    this._data = new Uint16Array(2);\r\n    // head of the free content index\r\n    this._data[0] = 0;\r\n    // using segment num\r\n    this._data[1] = 0;\r\n\r\n    this._contentNum = contentNum;\r\n    this._signData = new Uint16Array(this._contentNum * 2);\r\n    this._spacesData = [];\r\n\r\n    for (let i = 0; i < contentNum; i++) {\r\n        let signIndex = i * 2;\r\n        // store content block index but not sign array index\r\n        this._signData[signIndex + POS_NEXT_FREE] = i + 1;\r\n        this._signData[signIndex + POS_FREE_FLAG] = SPACE_FREE_FLAG;\r\n\r\n        this._spacesData[i] = {\r\n            index: i,\r\n            unitID: unitID,\r\n        };\r\n    }\r\n    // last one has no next space;\r\n    this._signData[(contentNum - 1) * 2] = POINTER_INVALID_FLAG;\r\n};\r\n\r\nlet UnitBaseProto = UnitBase.prototype;\r\nUnitBaseProto.hasSpace = function () {\r\n    return this._data[0] !== POINTER_INVALID_FLAG;\r\n};\r\n\r\nUnitBaseProto.isAllFree = function () {\r\n    return this._data[1] == 0;\r\n};\r\n\r\n// pop space from unit\r\nUnitBaseProto.pop = function () {\r\n    let headFreeIndex = this._data[0];\r\n    if (headFreeIndex === POINTER_INVALID_FLAG) return null;\r\n\r\n    let index = headFreeIndex;\r\n    let signIndex = index * 2;\r\n    let space = this._spacesData[index];\r\n\r\n    // set use flag\r\n    this._signData[signIndex + POS_FREE_FLAG] = SPACE_USE_FLAG;\r\n\r\n    // store new next free space index\r\n    this._data[0] = this._signData[signIndex + POS_NEXT_FREE];\r\n    // add using segment num\r\n    this._data[1]++;\r\n    return space;\r\n};\r\n\r\n// push back to unit\r\nUnitBaseProto.push = function (index) {\r\n    let signIndex = index * 2;\r\n\r\n    // set free flag\r\n    this._signData[signIndex + POS_FREE_FLAG] = SPACE_FREE_FLAG;\r\n\r\n    // store head free index to the space\r\n    this._signData[signIndex + POS_NEXT_FREE] = this._data[0];\r\n    // update head free index\r\n    this._data[0] = index;\r\n    // sub using segment num\r\n    this._data[1]--;\r\n};\r\n\r\n// dump all space info\r\nUnitBaseProto.dump = function () {\r\n    let spaceNum = 0;\r\n    let index = this._data[0];\r\n    let freeStr = \"\";\r\n    \r\n    while (index != POINTER_INVALID_FLAG) {\r\n        spaceNum ++;\r\n        freeStr += index + \"->\";\r\n        index = this._signData[index * 2 + POS_NEXT_FREE];\r\n    }\r\n\r\n    let usingNum = 0;\r\n    let usingStr = \"\";\r\n    let contentNum = this._contentNum;\r\n    for (let i = 0; i < contentNum; i++) {\r\n        let freeFlag = this._signData[i * 2 + POS_FREE_FLAG];\r\n        if (freeFlag == SPACE_USE_FLAG) {\r\n            usingNum ++;\r\n            usingStr += i + \"->\";\r\n        }\r\n    }\r\n    \r\n    let totalNum = spaceNum + usingNum;\r\n    console.log(\r\n        \"unitID:\", this.unitID, \r\n        \"spaceNum:\", spaceNum, \r\n        \"calc using num:\", usingNum, \r\n        'store using num:', this._data[1], \r\n        'calc total num:', totalNum, \r\n        'actually total num:', this._contentNum\r\n    );\r\n    console.log(\"free info:\", freeStr);\r\n    console.log(\"using info:\", usingStr);\r\n\r\n    if (usingNum != this._data[1]) {\r\n        cc.error(\r\n            'using num error', \r\n            \"calc using num:\", usingNum, \r\n            'store using num:', this._data[1]\r\n        );\r\n    }\r\n\r\n    if (spaceNum + usingNum != this._contentNum) {\r\n        cc.error(\r\n            'total num error', \r\n            'calc total num:', totalNum, \r\n            'actually total num:', this._contentNum\r\n        );\r\n    }\r\n};\r\n\r\nmodule.exports = UnitBase;"]}