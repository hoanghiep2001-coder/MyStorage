{"version":3,"sources":["assets\\lcc-ui-sorting-group\\engine-extend\\render-flow.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nlet _batcher;\r\nlet _cullingMask = 0;\r\n\r\n/**\r\n * 当前渲染层级\r\n */\r\nlet renderLevel = 0;\r\n\r\n/**\r\n * 当前渲染优先级\r\n */\r\nlet renderPriority = 0;\r\n\r\n/**\r\n * 渲染器缓存\r\n */\r\nlet rendererCache:cc.RenderComponent[] = [];\r\n\r\n/**\r\n * 渲染器排序\r\n */\r\nlet rendererOrder:boolean = false;\r\n\r\n/**\r\n * 刷新渲染缓存\r\n */\r\nfunction flushRendererCache(){\r\n    if(rendererCache.length > 0){\r\n        if(rendererOrder){\r\n            rendererCache.sort((a, b)=>{ return a.renderPriority - b.renderPriority; });\r\n        }\r\n        for(let render of rendererCache){\r\n            // console.log(`${render.node.name} - ${render.renderPriority}`);\r\n            //@ts-ignore\r\n            render._checkBacth(_batcher, render.node._cullingMask);\r\n            //@ts-ignore\r\n            render._assembler.fillBuffers(render, _batcher);\r\n        }\r\n        rendererCache.length = 0;\r\n    }\r\n    rendererOrder = false;\r\n}\r\n\r\n//@ts-ignore\r\ncc.RenderFlow.visitRootNode = function (rootNode){\r\n    renderLevel = 0;\r\n    renderPriority = 0;\r\n    rendererCache.length = 0;\r\n    rendererOrder = false;\r\n\r\n    //@ts-ignore\r\n    _batcher = cc.RenderFlow.getBachther();\r\n    \r\n    //@ts-ignore\r\n    cc.RenderFlow.validateRenderers();    \r\n\r\n    let preCullingMask = _cullingMask;\r\n    _cullingMask = rootNode._cullingMask;\r\n\r\n    //@ts-ignore\r\n    if (rootNode._renderFlag & cc.RenderFlow.FLAG_WORLD_TRANSFORM) {\r\n        _batcher.worldMatDirty ++;\r\n        rootNode._calculWorldMatrix();\r\n        //@ts-ignore\r\n        rootNode._renderFlag &= ~cc.RenderFlow.FLAG_WORLD_TRANSFORM;\r\n\r\n        //@ts-ignore\r\n        cc.RenderFlow.flows[rootNode._renderFlag]._func(rootNode);\r\n        flushRendererCache();\r\n\r\n        _batcher.worldMatDirty --;\r\n    }\r\n    else {\r\n        //@ts-ignore\r\n        cc.RenderFlow.flows[rootNode._renderFlag]._func(rootNode);\r\n        flushRendererCache();\r\n    }\r\n\r\n    _cullingMask = preCullingMask;\r\n}\r\n\r\n//@ts-ignore\r\ncc.RenderFlow.prototype._render = function (node) {\r\n    let comp = node._renderComponent;\r\n    let preRenderPriority = renderPriority;\r\n\r\n    renderPriority = node._sortingEnabled ? node._sortingPriority : renderPriority;\r\n    \r\n    if(node._sortingEnabled){\r\n        // cc.log(`++ ${node.name}`);\r\n        ++renderLevel;\r\n    }\r\n    // cc.log(`${renderLevel} -> ${node.name}`);\r\n    if(renderLevel > 0){\r\n        if(comp instanceof cc.Mask){\r\n            flushRendererCache();\r\n\r\n            //@ts-ignore\r\n            comp._checkBacth(_batcher, node._cullingMask);\r\n            //@ts-ignore\r\n            comp._assembler.fillBuffers(comp, _batcher);\r\n        }else{\r\n            if (_batcher.worldMatDirty && comp._assembler.updateWorldVerts) {\r\n                comp._assembler.updateWorldVerts(comp);\r\n            }\r\n            if(comp instanceof sp.Skeleton){\r\n                _batcher.worldMatDirty++;\r\n                //@ts-ignore\r\n                comp.attachUtil._syncAttachedNode();\r\n            }\r\n            rendererCache.push(comp);\r\n            comp.renderPriority = node._sortingEnabled ? node._sortingPriority : renderPriority;\r\n            if(renderPriority != 0){\r\n                rendererOrder = true;\r\n            }\r\n        }\r\n    }else{\r\n        //@ts-ignore\r\n        comp._checkBacth(_batcher, node._cullingMask);\r\n        //@ts-ignore\r\n        comp._assembler.fillBuffers(comp, _batcher);\r\n    }\r\n    this._next._func(node);\r\n\r\n    if(node._sortingEnabled){\r\n        // cc.log(`-- ${node.name}`);\r\n        --renderLevel;\r\n        if(renderLevel <= 0){\r\n            flushRendererCache();\r\n        }\r\n    }\r\n    renderPriority = preRenderPriority;\r\n\r\n};\r\n\r\n//@ts-ignore\r\ncc.RenderFlow.prototype._postRender = function (node) {\r\n    let comp = node._renderComponent;\r\n    if(comp instanceof cc.Mask){\r\n        flushRendererCache();\r\n    }\r\n    comp._checkBacth(_batcher, node._cullingMask);\r\n    comp._assembler.postFillBuffers(comp, _batcher);\r\n    this._next._func(node);\r\n};\r\n\r\n//@ts-ignore\r\ncc.RenderFlow.prototype._children = function (node) {\r\n    let cullingMask = _cullingMask;\r\n    let batcher = _batcher;\r\n\r\n    let parentOpacity = batcher.parentOpacity;\r\n    let opacity = (batcher.parentOpacity *= (node._opacity / 255));\r\n\r\n    if(!node._renderComponent && node._sortingEnabled){\r\n        // cc.log(`++ ${node.name}`);\r\n        ++renderLevel;\r\n    }\r\n\r\n    //@ts-ignore\r\n    let worldTransformFlag = batcher.worldMatDirty ? cc.RenderFlow.FLAG_WORLD_TRANSFORM : 0;\r\n    //@ts-ignore\r\n    let worldOpacityFlag = batcher.parentOpacityDirty ? cc.RenderFlow.FLAG_OPACITY_COLOR : 0;\r\n    let worldDirtyFlag = worldTransformFlag | worldOpacityFlag;\r\n\r\n    let children = node._children;\r\n    for (let i = 0, l = children.length; i < l; i++) {\r\n        let c = children[i];\r\n\r\n        // Advance the modification of the flag to avoid node attribute modification is invalid when opacity === 0.\r\n        c._renderFlag |= worldDirtyFlag;\r\n        if (!c._activeInHierarchy || c._opacity === 0) continue;\r\n\r\n        _cullingMask = c._cullingMask = c.groupIndex === 0 ? cullingMask : 1 << c.groupIndex;\r\n\r\n        // TODO: Maybe has better way to implement cascade opacity\r\n        let colorVal = c._color._val;\r\n        c._color._fastSetA(c._opacity * opacity);\r\n        // @ts-ignore\r\n        cc.RenderFlow.flows[c._renderFlag]._func(c);\r\n        c._color._val = colorVal;\r\n    }\r\n\r\n    batcher.parentOpacity = parentOpacity;\r\n\r\n    this._next._func(node);\r\n    \r\n    if(!node._renderComponent && node._sortingEnabled){\r\n        // cc.log(`-- ${node.name}`);\r\n        --renderLevel;\r\n        if(renderLevel <= 0){\r\n            flushRendererCache();\r\n        }\r\n    }\r\n};\r\n"]}